apply plugin: 'com.github.johnrengelman.shadow'

apply from: '../gradle/shared.gradle'

configurations {
    /*
     * A brief explanation of the various configurations:
     * - `shadow` refers to dependencies that we expect to be available on the classpath at runtime,
     *   if one is running with the shadow JAR.
     * - `compile` refers to dependencies needed at compile time.
     * - `explicitShadow` is a thing we use to mean "needed at both compile time and runtime-with-shadow-JAR" - the
     *   shadow configuration doesn't automatically inherit from compile. Usually this is for dependencies we are not
     *   shading. If not we have to write each dependency twice.
     * - `toBeShaded` is purely for readability. This would be functionally unchanged if we just used compile.
     */
    explicitShadow
    compile.extendsFrom(explicitShadow)
    shadow.extendsFrom(explicitShadow)

    // This is used for cleaning up the POM.
    toBeShaded
    compile.extendsFrom(toBeShaded)
}

dependencies {
  explicitShadow project(':atlasdb-remoting-api')
  explicitShadow project(':lock-api')
  explicitShadow group: 'com.squareup.okhttp3', name: 'okhttp'
  explicitShadow group: 'com.palantir.conjure.java.api', name: 'service-config'
  explicitShadow group: 'com.palantir.conjure.java.runtime', name: 'conjure-java-jaxrs-client'
  explicitShadow group: 'com.palantir.conjure.java.runtime', name: 'keystores'
  explicitShadow group: 'com.palantir.conjure.java.runtime', name: 'refresh-utils'
  explicitShadow group: 'com.palantir.common', name: 'streams'

  explicitShadow group: 'javax.validation', name: 'validation-api'

  toBeShaded group: 'com.palantir.remoting2', name: 'error-handling'
  toBeShaded group: 'com.palantir.remoting2', name: 'jackson-support'

  toBeShaded group: 'com.netflix.feign', name: 'feign-core'
  toBeShaded (group: 'com.netflix.feign', name: 'feign-jaxrs') {
    exclude module: 'jsr311-api'
  }
  toBeShaded group: 'com.netflix.feign', name: 'feign-jackson'
  toBeShaded group: 'com.netflix.feign', name: 'feign-okhttp'

  compile 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

  annotationProcessor group: 'org.immutables', name: 'value'
  compileOnly 'org.immutables:value::annotations'

  testCompile group: 'junit', name: 'junit'
  testCompile group: 'org.mockito', name: 'mockito-core'
  testCompile(group: 'org.jmock', name: 'jmock') {
      exclude group: 'org.hamcrest'
  }
  testCompile group: 'com.github.tomakehurst', name: 'wiremock'
  testCompile group: 'org.assertj', name: 'assertj-core'
  testCompile group: 'org.hamcrest', name: 'hamcrest-core'
  testCompile group: 'org.hamcrest', name: 'hamcrest-library'

  // Needed for Jersey Response-based tests
  testCompile group: 'org.glassfish.jersey.core', name: 'jersey-common'
}

shadowJar {
  mergeServiceFiles()
  classifier ''

  relocate('feign', 'com.palantir.atlasdb.shaded.feign')
  relocate('okio', 'com.palantir.atlasdb.shaded.okio')
  relocate('org.jvnet.animal_sniffer', 'com.palantir.atlasdb.shaded.org.jvnet.animal_sniffer')
  relocate('com.palantir.remoting2.errors', 'com.palantir.atlasdb.shaded.com.palantir.remoting2.errors')
  relocate('com.palantir.remoting2.ext.jackson', 'com.palantir.atlasdb.shaded.com.palantir.remoting2.ext.jackson')

  dependencies {
    include (dependency('com.netflix.feign:feign-.*'))
    include (dependency('com.squareup.okio:okio'))
    include (dependency('org.jvnet:animal-sniffer-annotation'))
    include (dependency(group: 'com.palantir.remoting2', name: 'error-handling'))
    include (dependency(group: 'com.palantir.remoting2', name: 'jackson-support'))
  }
}

jar.dependsOn shadowJar
jar.onlyIf { false }
