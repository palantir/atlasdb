types:
  imports:
    BigInteger:
      base-type: any
      external:
        java: java.math.BigInteger
    HeldLocksToken:
      base-type: any
      external:
        java: com.palantir.lock.HeldLocksToken
    LockRequest:
      base-type: any
      external:
        java: com.palantir.lock.LockRequest
    Long:
      base-type: any
      external:
        java: java.lang.Long

  definitions:
    default-package: com.palantir.lock
    objects:
      ConjureLockRefreshToken:
        fields:
          tokenId: BigInteger
          expirationDateMs: Long
      ConjureLockV1Request:
        fields:
          lockClient:
            type: string
            safety: safe
          lockRequest: LockRequest
      ConjureSimpleHeldLocksToken:
        fields:
          tokenId: BigInteger
          creationDateMs: Long


services:
  ConjureLockV1Service:
    name: Lock V1 service
    default-auth: header
    package: com.palantir.lock
    base-path: /lk
    endpoints:
      lockAndGetHeldLocks:
        http: POST /laghl/{namespace}
        args:
          namespace:
            type: string
            safety: safe
          request: ConjureLockV1Request
        tags:
          - server-request-context
        returns: optional<HeldLocksToken>
      refreshLockRefreshTokens:
        http: POST /rlrt/{namespace}
        args:
          namespace:
            type: string
            safety: safe
          request: list<ConjureLockRefreshToken>
        tags:
          - server-request-context
        returns: set<ConjureLockRefreshToken>
      unlockSimple:
        http: POST /us/{namespace}
        args:
          namespace:
            type: string
            safety: safe
          request: ConjureSimpleHeldLocksToken
        tags:
          - server-request-context
        returns: boolean
