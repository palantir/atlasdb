
apply from: '../gradle/shared.gradle'

apply plugin: 'application'
mainClassName = 'com.palantir.atlasdb.performance.cli.AtlasDbPerfCli'
applicationName = 'atlasdb-perf'

schemas = ['com.palantir.atlasdb.performance.schema.StreamTestSchema']

configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        if (details.requested.group == 'com.google.code.findbugs' && details.requested.name == 'annotations') {
            details.useTarget group: 'com.google.code.findbugs', name: 'findbugs-annotations', version: '3.0.1'
        }
    }
}

dependencies {
  compile project(':atlasdb-api')
  compile project(':atlasdb-dagger')
  compile project(':atlasdb-dbkvs')
  compile project(':atlasdb-cassandra')

  compile group: 'io.airlift', name: 'airline', version: '0.7'
  compile group: 'org.reflections', name: 'reflections', version: '0.9.10'
  compile group: 'com.palantir.docker.compose', name: 'docker-compose-rule-junit4'
  compile group: 'ch.qos.logback', name: 'logback-classic'
  compile group: 'org.awaitility', name: 'awaitility'

  testCompile group: 'org.assertj', name: 'assertj-core'
  testCompile group: 'org.mockito', name: 'mockito-core'

  compile group: 'org.openjdk.jmh', name: 'jmh-core', version: '1.13'
  annotationProcessor group: 'org.immutables', name: 'value'
  compileOnly 'org.immutables:value::annotations'
  annotationProcessor group: 'org.openjdk.jmh', name: 'jmh-generator-annprocess', version: '1.13'
  compileOnly 'org.openjdk.jmh:jmh-generator-annprocess:1.13'
}

distZip {
    into(project.name + '-' + project.version) {
        from '..'
        include 'docker-containers/**/*'
    }
}

