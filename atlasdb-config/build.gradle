
apply from: "../gradle/shared.gradle"

dependencies {
    compile project(':atlasdb-api')
    compile project(':atlasdb-conjure')
    compile project(':atlasdb-impl-shared')
    compile project(':leader-election-impl')
    compile project(':lock-impl')
    compile project(':timestamp-client')

    compile group: 'jakarta.validation', name: 'jakarta.validation-api'
    compile group: 'com.palantir.config.crypto', name: 'encrypted-config-value-module'
    compile group: 'com.palantir.refreshable', name: 'refreshable'
    compile group: 'com.palantir.remoting2', name: 'error-handling' // needed for backwards compatibility
    compile group: 'com.palantir.safe-logging', name: 'safe-logging'
    compile (group: 'com.palantir.tritium', name: 'tritium-lib') {
        exclude (group: 'io.dropwizard.metrics', module: 'metrics-core')
        exclude (group: 'org.hdrhistogram', module: 'HdrHistogram')
    }
    compile group: 'org.hdrhistogram', name: 'HdrHistogram'

    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind'
    compile group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-yaml'
    compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jdk8'
    compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310'

    implementation 'com.fasterxml.jackson.core:jackson-annotations'
    implementation 'com.fasterxml.jackson.core:jackson-core'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-guava'
    implementation 'com.google.errorprone:error_prone_annotations'
    implementation 'com.google.guava:guava'
    implementation 'com.palantir.common:streams'
    implementation 'com.palantir.conjure.java.api:errors'
    implementation 'com.palantir.conjure.java.api:service-config'
    implementation 'com.palantir.conjure.java.api:ssl-config'
    implementation 'com.palantir.conjure.java.runtime:client-config'
    implementation 'com.palantir.conjure.java.runtime:keystores'
    implementation 'com.palantir.dialogue:dialogue-target'
    implementation 'com.palantir.safe-logging:preconditions'
    implementation 'com.palantir.tokens:auth-tokens'
    implementation 'com.palantir.tritium:tritium-registry'
    implementation 'io.dropwizard.metrics:metrics-core'
    implementation 'jakarta.inject:jakarta.inject-api'
    implementation 'jakarta.ws.rs:jakarta.ws.rs-api'
    implementation 'org.glassfish.jersey.core:jersey-common'
    implementation 'org.rocksdb:rocksdbjni'
    implementation 'org.slf4j:slf4j-api'
    implementation project(':atlasdb-client')
    implementation project(':atlasdb-commons')
    implementation project(':atlasdb-coordination-impl')
    implementation project(':atlasdb-remoting-api')
    implementation project(':commons-annotations')
    implementation project(':commons-executors')
    implementation project(':leader-election-api')
    implementation project(':lock-api')
    implementation project(':lock-api-objects')
    implementation project(':lock-conjure-api:lock-conjure-api-dialogue')
    implementation project(':timelock-api:timelock-api-dialogue')
    implementation project(':timelock-api:timelock-api-jersey')
    implementation project(':timelock-api:timelock-api-objects')
    implementation project(':timestamp-api')

    testImplementation 'com.google.auto.service:auto-service-annotations'
    testImplementation 'com.palantir.config.crypto:encrypted-config-value'
    testImplementation 'com.palantir.conjure.java.runtime:conjure-java-jackson-serialization'
    testImplementation 'com.palantir.conjure.java:conjure-lib'
    testImplementation 'com.palantir.sls.versions:sls-versions'

    api 'com.palantir.dialogue:dialogue-clients'

    // This is added so that AtlasDB clients can specify the javaAgent as a JVM argument to load jars needed for HTTP/2
    // in the boot classpath
    runtime group: 'org.mortbay.jetty.alpn', name: 'jetty-alpn-agent', version: libVersions.jetty_alpn_agent

    annotationProcessor group: 'org.immutables', name: 'value'
    compileOnly 'org.immutables:value::annotations'
    annotationProcessor 'com.google.auto.service:auto-service'
    compileOnly 'com.google.auto.service:auto-service'

    testAnnotationProcessor 'com.google.auto.service:auto-service'
    testCompileOnly 'com.google.auto.service:auto-service'
    testAnnotationProcessor group: 'org.immutables', name: 'value'
    testCompileOnly 'org.immutables:value::annotations'

    testCompile project(path: ":atlasdb-client", configuration: "testArtifacts")
    testCompile(group: 'org.jmock', name: 'jmock') {
      exclude group: 'org.hamcrest'
    }
    testCompile group: 'org.mockito', name: 'mockito-core'
    testCompile group: 'com.github.tomakehurst', name: 'wiremock-standalone'
    testCompile group: 'org.assertj', name: 'assertj-core'
    testCompile group: 'org.awaitility', name: 'awaitility'
    testCompile group: 'com.github.stefanbirkner', name: 'system-rules'
    // Needed for Jersey Response-based tests
    testCompile group: 'org.glassfish.jersey.core', name: 'jersey-common'
}
