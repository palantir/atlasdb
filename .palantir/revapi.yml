acceptedBreaks:
  "0.1040.0":
    com.palantir.atlasdb:atlasdb-api:
    - code: "java.class.removed"
      old: "interface com.palantir.atlasdb.transaction.api.AutoDelegate_TransactionKeyValueServiceManager"
      justification: "Still iterating on the APIs"
    - code: "java.class.removed"
      old: "interface com.palantir.atlasdb.transaction.api.TransactionKeyValueServiceManager"
      justification: "Still iterating on the APIs"
    - code: "java.method.returnTypeChanged"
      old: "method com.palantir.atlasdb.transaction.api.TransactionKeyValueServiceManager\
        \ com.palantir.atlasdb.spi.TransactionKeyValueServiceManagerFactory<T>::create(com.palantir.atlasdb.coordination.CoordinationService<T>,\
        \ com.palantir.atlasdb.spi.KeyValueServiceManager, com.palantir.atlasdb.spi.TransactionKeyValueServiceConfig,\
        \ com.palantir.refreshable.Refreshable<com.palantir.atlasdb.spi.TransactionKeyValueServiceRuntimeConfig>,\
        \ boolean)"
      new: "method com.palantir.atlasdb.cell.api.TransactionKeyValueServiceManager\
        \ com.palantir.atlasdb.spi.TransactionKeyValueServiceManagerFactory<T>::create(com.palantir.atlasdb.coordination.CoordinationService<T>,\
        \ com.palantir.atlasdb.spi.KeyValueServiceManager, com.palantir.atlasdb.spi.TransactionKeyValueServiceConfig,\
        \ com.palantir.refreshable.Refreshable<com.palantir.atlasdb.spi.TransactionKeyValueServiceRuntimeConfig>,\
        \ boolean)"
      justification: "Still iterating on the APIs"
    com.palantir.atlasdb:atlasdb-config:
    - code: "java.method.numberOfParametersChanged"
      old: "method com.palantir.atlasdb.factory.TransactionManagersInitializer com.palantir.atlasdb.factory.TransactionManagersInitializer::createInitialTables(com.palantir.atlasdb.keyvalue.api.KeyValueService,\
        \ java.util.Set<com.palantir.atlasdb.table.description.Schema>, boolean, boolean)"
      new: "method com.palantir.atlasdb.factory.TransactionManagersInitializer com.palantir.atlasdb.factory.TransactionManagersInitializer::createInitialTables(com.palantir.atlasdb.keyvalue.api.KeyValueService,\
        \ com.palantir.atlasdb.cell.api.TransactionKeyValueServiceManager, java.util.Set<com.palantir.atlasdb.table.description.Schema>,\
        \ boolean, boolean)"
      justification: "New API"
  "0.1045.0":
    com.palantir.atlasdb:atlasdb-api:
    - code: "java.method.numberOfParametersChanged"
      old: "method com.palantir.atlasdb.cell.api.TransactionKeyValueServiceManager\
        \ com.palantir.atlasdb.spi.TransactionKeyValueServiceManagerFactory<T>::create(com.palantir.atlasdb.coordination.CoordinationService<T>,\
        \ com.palantir.atlasdb.spi.KeyValueServiceManager, com.palantir.atlasdb.spi.TransactionKeyValueServiceConfig,\
        \ com.palantir.refreshable.Refreshable<com.palantir.atlasdb.spi.TransactionKeyValueServiceRuntimeConfig>,\
        \ boolean)"
      new: "method com.palantir.atlasdb.cell.api.TransactionKeyValueServiceManager\
        \ com.palantir.atlasdb.spi.TransactionKeyValueServiceManagerFactory<T>::create(java.lang.String,\
        \ com.palantir.dialogue.clients.DialogueClients.ReloadingFactory, com.palantir.atlasdb.util.MetricsManager,\
        \ com.palantir.atlasdb.coordination.CoordinationService<T>, com.palantir.atlasdb.spi.KeyValueServiceManager,\
        \ com.palantir.atlasdb.spi.TransactionKeyValueServiceConfig, com.palantir.refreshable.Refreshable<com.palantir.atlasdb.spi.TransactionKeyValueServiceRuntimeConfig>,\
        \ boolean)"
      justification: "Adding observability to TransactionKeyValueServiceManager"
  "0.1047.0":
    com.palantir.atlasdb:atlasdb-api:
    - code: "java.method.addedToInterface"
      new: "method boolean com.palantir.atlasdb.cell.api.TransactionKeyValueServiceManager::isInitialized()"
      justification: "Adding async init to TransactionKeyValueServiceManager"
  "0.1050.0":
    com.palantir.atlasdb:atlasdb-api:
    - code: "java.method.removed"
      old: "method java.util.Map<com.palantir.atlasdb.keyvalue.api.Cell, com.palantir.atlasdb.keyvalue.api.Value>\
        \ com.palantir.atlasdb.cell.api.AutoDelegate_TransactionKeyValueService::get(com.palantir.atlasdb.keyvalue.api.TableReference,\
        \ java.util.Map<com.palantir.atlasdb.keyvalue.api.Cell, java.lang.Long>)"
      justification: "TransactionKeyValueService is largely internal"
    - code: "java.method.removed"
      old: "method java.util.Map<com.palantir.atlasdb.keyvalue.api.Cell, com.palantir.atlasdb.keyvalue.api.Value>\
        \ com.palantir.atlasdb.cell.api.TransactionKeyValueService::get(com.palantir.atlasdb.keyvalue.api.TableReference,\
        \ java.util.Map<com.palantir.atlasdb.keyvalue.api.Cell, java.lang.Long>)"
      justification: "TransactionKeyValueService is largely internal"
  "0.1059.0":
    com.palantir.atlasdb:atlasdb-api:
    - code: "java.method.addedToInterface"
      new: "method com.google.common.util.concurrent.ListenableFuture<org.eclipse.collections.api.map.primitive.LongLongMap>\
        \ com.palantir.atlasdb.transaction.api.CommitTimestampLoader::getCommitTimestampsNonBlockingForValidation(com.palantir.atlasdb.keyvalue.api.TableReference,\
        \ org.eclipse.collections.api.LongIterable)"
      justification: "CommitTimestampLoader is an internal interface"
    - code: "java.method.numberOfParametersChanged"
      old: "method com.google.common.util.concurrent.ListenableFuture<org.eclipse.collections.api.map.primitive.LongLongMap>\
        \ com.palantir.atlasdb.transaction.api.CommitTimestampLoader::getCommitTimestamps(com.palantir.atlasdb.keyvalue.api.TableReference,\
        \ org.eclipse.collections.api.LongIterable, boolean)"
      new: "method com.google.common.util.concurrent.ListenableFuture<org.eclipse.collections.api.map.primitive.LongLongMap>\
        \ com.palantir.atlasdb.transaction.api.CommitTimestampLoader::getCommitTimestamps(com.palantir.atlasdb.keyvalue.api.TableReference,\
        \ org.eclipse.collections.api.LongIterable)"
      justification: "CommitTimestampLoader is an internal interface"
  "0.1060.0":
    com.palantir.atlasdb:atlasdb-api:
    - code: "java.method.addedToInterface"
      new: "method boolean com.palantir.atlasdb.cell.api.TransactionKeyValueService::isValid(long)"
      justification: "internal API"
  "0.1073.0":
    com.palantir.atlasdb:atlasdb-api:
    - code: "java.method.parameterTypeChanged"
      old: "parameter void com.palantir.atlasdb.keyvalue.api.RetryLimitReachedException::<init>(java.util.List<java.lang.Exception>,\
        \ ===java.util.Map<java.lang.String, java.lang.Integer>===)"
      new: "parameter void com.palantir.atlasdb.keyvalue.api.RetryLimitReachedException::<init>(java.util.List<java.lang.Exception>,\
        \ ===java.util.List<com.palantir.atlasdb.keyvalue.api.RetryLimitReachedException.AttemptedTarget>===)"
      justification: "Only added recently"
  "0.1079.0":
    com.palantir.atlasdb:atlasdb-api:
    - code: "java.class.nowFinal"
      old: "class com.palantir.atlasdb.transaction.api.TransactionSerializableConflictException"
      new: "class com.palantir.atlasdb.transaction.api.TransactionSerializableConflictException"
      justification: "Intentional break"
    - code: "java.class.nowImplementsInterface"
      old: "class com.palantir.atlasdb.transaction.api.TransactionSerializableConflictException"
      new: "class com.palantir.atlasdb.transaction.api.TransactionSerializableConflictException"
      justification: "Intentional break"
    - code: "java.method.numberOfParametersChanged"
      old: "method com.palantir.atlasdb.transaction.api.TransactionConflictException\
        \ com.palantir.atlasdb.transaction.api.TransactionConflictException::create(com.palantir.atlasdb.keyvalue.api.TableReference,\
        \ long, java.util.Collection<com.palantir.atlasdb.transaction.api.TransactionConflictException.CellConflict>,\
        \ java.util.Collection<com.palantir.atlasdb.transaction.api.TransactionConflictException.CellConflict>,\
        \ long)"
      new: "method com.palantir.atlasdb.transaction.api.TransactionConflictException\
        \ com.palantir.atlasdb.transaction.api.TransactionConflictException::create(com.palantir.atlasdb.keyvalue.api.TableReference,\
        \ long, java.util.Collection<com.palantir.atlasdb.transaction.api.TransactionConflictException.CellConflict>,\
        \ java.util.Collection<com.palantir.atlasdb.transaction.api.TransactionConflictException.CellConflict>,\
        \ long, java.util.List<com.palantir.logsafe.Arg<?>>)"
      justification: "Transaction conflict exceptions are only intended to be instantiated\
        \ internally"
    - code: "java.method.numberOfParametersChanged"
      old: "method com.palantir.atlasdb.transaction.api.TransactionSerializableConflictException\
        \ com.palantir.atlasdb.transaction.api.TransactionSerializableConflictException::create(com.palantir.atlasdb.keyvalue.api.TableReference,\
        \ long, long)"
      new: "method com.palantir.atlasdb.transaction.api.TransactionSerializableConflictException\
        \ com.palantir.atlasdb.transaction.api.TransactionSerializableConflictException::create(com.palantir.atlasdb.keyvalue.api.TableReference,\
        \ long, long, java.util.List<com.palantir.logsafe.Arg<?>>)"
      justification: "Transaction conflict exceptions are only intended to be instantiated\
        \ internally"
    - code: "java.method.numberOfParametersChanged"
      old: "method void com.palantir.atlasdb.transaction.api.TransactionSerializableConflictException::<init>(java.lang.String,\
        \ com.palantir.atlasdb.keyvalue.api.TableReference)"
      new: "method void com.palantir.atlasdb.transaction.api.TransactionSerializableConflictException::<init>(java.lang.String,\
        \ com.palantir.atlasdb.keyvalue.api.TableReference, java.util.List<com.palantir.logsafe.Arg<?>>)"
      justification: "Transaction conflict exceptions are only intended to be instantiated\
        \ internally"
  "0.1095.0":
    com.palantir.atlasdb:atlasdb-api:
    - code: "java.method.addedToInterface"
      new: "method com.palantir.atlasdb.cell.api.DdlManager com.palantir.atlasdb.transaction.api.TransactionManager::getDdlManager()"
      justification: "Adding getDdlManager() to TransactionManager will not break\
        \ existing usage"
    - code: "java.method.addedToInterface"
      new: "method void com.palantir.atlasdb.cell.api.DdlManager::dropTables(java.util.Set<com.palantir.atlasdb.keyvalue.api.TableReference>)"
      justification: "Adding getDdlManager() to TransactionManager will not break\
        \ existing usage"
  "0.1101.0":
    com.palantir.atlasdb:atlasdb-cassandra:
    - code: "java.method.parameterTypeChanged"
      old: "parameter void com.palantir.atlasdb.keyvalue.cassandra.TracingQueryRunner::<init>(===org.slf4j.Logger===,\
        \ java.util.function.Supplier<com.palantir.atlasdb.cassandra.CassandraTracingConfig>)"
      new: "parameter void com.palantir.atlasdb.keyvalue.cassandra.TracingQueryRunner::<init>(===com.palantir.logsafe.logger.SafeLogger===,\
        \ java.util.function.Supplier<com.palantir.atlasdb.cassandra.CassandraTracingConfig>)"
      justification: "internal API change on tracingqueryrunner"
  "0.1104.0":
    com.palantir.atlasdb:atlasdb-config:
    - code: "java.method.numberOfParametersChanged"
      old: "method com.palantir.lock.LockState com.palantir.atlasdb.factory.timelock.TimeoutSensitiveLockRpcClient::getLockState(com.palantir.lock.LockDescriptor)"
      new: "method com.palantir.lock.LockState com.palantir.atlasdb.factory.timelock.TimeoutSensitiveLockRpcClient::getLockState(java.lang.String,\
        \ com.palantir.lock.LockDescriptor)"
      justification: "LockRpcClient#getLockState is broken"
  "0.1127.0":
    com.palantir.atlasdb:atlasdb-config:
    - code: "java.method.numberOfParametersChanged"
      old: "method com.palantir.atlasdb.factory.TimeLockHelperServices com.palantir.atlasdb.factory.TimeLockHelperServices::create(java.lang.String,\
        \ com.palantir.atlasdb.util.MetricsManager, java.util.Set<com.palantir.atlasdb.table.description.Schema>,\
        \ com.palantir.lock.client.LockWatchStarter, com.palantir.atlasdb.keyvalue.api.LockWatchCachingConfig,\
        \ java.util.function.Supplier<java.util.Optional<com.palantir.lock.client.RequestBatchersFactory.MultiClientRequestBatchers>>)"
      new: "method com.palantir.atlasdb.factory.TimeLockHelperServices com.palantir.atlasdb.factory.TimeLockHelperServices::create(java.lang.String,\
        \ com.palantir.atlasdb.util.MetricsManager, java.util.Set<com.palantir.atlasdb.table.description.Schema>,\
        \ com.palantir.lock.client.LockWatchStarter, com.palantir.atlasdb.keyvalue.api.LockWatchCachingConfig,\
        \ java.util.function.Supplier<java.util.Optional<com.palantir.lock.client.RequestBatchersFactory.MultiClientRequestBatchers>>,\
        \ com.palantir.lock.client.LockWatchTimeLockDiagnosticsLogger)"
      justification: "used in atlas only"
  "0.1133.0":
    com.palantir.atlasdb:atlasdb-api:
    - code: "java.method.addedToInterface"
      new: "method <T> T com.palantir.atlasdb.transaction.service.TransactionStatus::accept(com.palantir.atlasdb.transaction.service.TransactionStatus.Visitor<T>)"
      justification: "purely addition - adding a visitor to transaction status"
  "0.1134.0":
    com.palantir.atlasdb:atlasdb-api:
    - code: "java.method.abstractMethodAdded"
      new: "method void com.palantir.atlasdb.keyvalue.api.watch.LockWatchManagerInternal::requestTransactionStateRemovalFromCache(long)"
      justification: "Internal API"
    - code: "java.method.addedToInterface"
      new: "method void com.palantir.atlasdb.keyvalue.api.cache.LockWatchValueScopingCache::requestStateRemoved(long)"
      justification: "Internal API"
    - code: "java.method.removed"
      old: "method void com.palantir.atlasdb.keyvalue.api.watch.LockWatchManagerInternal::removeTransactionStateFromCache(long)"
      justification: "Internal API"
    - code: "java.method.removed"
      old: "method void com.palantir.atlasdb.keyvalue.api.watch.NoOpLockWatchManager::removeTransactionStateFromCache(long)"
      justification: "Internal API"
  "0.1150.0":
    com.palantir.atlasdb:atlasdb-cassandra:
    - code: "java.class.nowFinal"
      old: "class com.palantir.atlasdb.keyvalue.cassandra.pool.CassandraService"
      new: "class com.palantir.atlasdb.keyvalue.cassandra.pool.CassandraService"
      justification: "Unused outside atlas"
    - code: "java.method.numberOfParametersChanged"
      old: "method void com.palantir.atlasdb.keyvalue.cassandra.CassandraClientFactory::<init>(com.palantir.atlasdb.util.MetricsManager,\
        \ com.palantir.atlasdb.keyvalue.cassandra.pool.CassandraServer, com.palantir.atlasdb.keyvalue.cassandra.CassandraClientFactory.CassandraClientConfig)"
      new: "method void com.palantir.atlasdb.keyvalue.cassandra.CassandraClientFactory::<init>(com.palantir.atlasdb.util.MetricsManager,\
        \ com.palantir.atlasdb.keyvalue.cassandra.pool.CassandraServer, com.palantir.atlasdb.keyvalue.cassandra.CassandraClientFactory.CassandraClientConfig,\
        \ com.palantir.atlasdb.keyvalue.cassandra.CassandraClientInstrumentation)"
      justification: "Unused outside atlas"
    - code: "java.method.numberOfParametersChanged"
      old: "method void com.palantir.atlasdb.keyvalue.cassandra.CassandraClientFactory::<init>(com.palantir.atlasdb.util.MetricsManager,\
        \ com.palantir.atlasdb.keyvalue.cassandra.pool.CassandraServer, com.palantir.atlasdb.keyvalue.cassandra.CassandraClientFactory.CassandraClientConfig)"
      new: "method void com.palantir.atlasdb.keyvalue.cassandra.CassandraClientFactory::<init>(com.palantir.atlasdb.util.MetricsManager,\
        \ com.palantir.atlasdb.keyvalue.cassandra.pool.CassandraServer, com.palantir.atlasdb.keyvalue.cassandra.CassandraClientFactory.CassandraClientConfig,\
        \ com.palantir.atlasdb.keyvalue.cassandra.CassandraClientMetrics)"
      justification: "Unused outside atlas"
    - code: "java.method.numberOfParametersChanged"
      old: "method void com.palantir.atlasdb.keyvalue.cassandra.CassandraClientPoolingContainer::<init>(com.palantir.atlasdb.util.MetricsManager,\
        \ com.palantir.atlasdb.keyvalue.cassandra.pool.CassandraServer, com.palantir.atlasdb.cassandra.CassandraKeyValueServiceConfig,\
        \ int, com.palantir.atlasdb.keyvalue.cassandra.pool.CassandraClientPoolMetrics)"
      new: "method void com.palantir.atlasdb.keyvalue.cassandra.CassandraClientPoolingContainer::<init>(com.palantir.atlasdb.util.MetricsManager,\
        \ com.palantir.atlasdb.keyvalue.cassandra.pool.CassandraServer, com.palantir.atlasdb.cassandra.CassandraKeyValueServiceConfig,\
        \ int, com.palantir.atlasdb.keyvalue.cassandra.pool.CassandraClientPoolMetrics,\
        \ com.palantir.atlasdb.keyvalue.cassandra.CassandraClientInstrumentation)"
      justification: "Unused outside atlas"
    - code: "java.method.numberOfParametersChanged"
      old: "method void com.palantir.atlasdb.keyvalue.cassandra.CassandraClientPoolingContainer::<init>(com.palantir.atlasdb.util.MetricsManager,\
        \ com.palantir.atlasdb.keyvalue.cassandra.pool.CassandraServer, com.palantir.atlasdb.cassandra.CassandraKeyValueServiceConfig,\
        \ int, com.palantir.atlasdb.keyvalue.cassandra.pool.CassandraClientPoolMetrics)"
      new: "method void com.palantir.atlasdb.keyvalue.cassandra.CassandraClientPoolingContainer::<init>(com.palantir.atlasdb.util.MetricsManager,\
        \ com.palantir.atlasdb.keyvalue.cassandra.pool.CassandraServer, com.palantir.atlasdb.cassandra.CassandraKeyValueServiceConfig,\
        \ int, com.palantir.atlasdb.keyvalue.cassandra.pool.CassandraClientPoolMetrics,\
        \ com.palantir.atlasdb.keyvalue.cassandra.CassandraClientMetrics)"
      justification: "Unused outside atlas"
    - code: "java.method.parameterTypeChanged"
      old: "parameter void com.palantir.atlasdb.keyvalue.cassandra.InstrumentedCassandraClient::<init>(com.palantir.atlasdb.keyvalue.cassandra.CassandraClient,\
        \ ===com.palantir.tritium.metrics.registry.TaggedMetricRegistry===)"
      new: "parameter void com.palantir.atlasdb.keyvalue.cassandra.InstrumentedCassandraClient::<init>(com.palantir.atlasdb.keyvalue.cassandra.CassandraClient,\
        \ ===com.palantir.atlasdb.keyvalue.cassandra.CassandraClientInstrumentation===)"
      justification: "Unused outside atlas"
    - code: "java.method.parameterTypeChanged"
      old: "parameter void com.palantir.atlasdb.keyvalue.cassandra.InstrumentedCassandraClient::<init>(com.palantir.atlasdb.keyvalue.cassandra.CassandraClient,\
        \ ===com.palantir.tritium.metrics.registry.TaggedMetricRegistry===)"
      new: "parameter void com.palantir.atlasdb.keyvalue.cassandra.InstrumentedCassandraClient::<init>(com.palantir.atlasdb.keyvalue.cassandra.CassandraClient,\
        \ ===com.palantir.atlasdb.keyvalue.cassandra.CassandraClientMetrics===)"
      justification: "Unused outside atlas"
    - code: "java.method.visibilityReduced"
      old: "method void com.palantir.atlasdb.keyvalue.cassandra.pool.CassandraService::<init>(com.palantir.atlasdb.util.MetricsManager,\
        \ com.palantir.atlasdb.cassandra.CassandraKeyValueServiceConfig, com.palantir.refreshable.Refreshable<com.palantir.atlasdb.cassandra.CassandraKeyValueServiceRuntimeConfig>,\
        \ com.palantir.atlasdb.keyvalue.cassandra.Blacklist, com.palantir.atlasdb.keyvalue.cassandra.pool.CassandraClientPoolMetrics)"
      new: "method void com.palantir.atlasdb.keyvalue.cassandra.pool.CassandraService::<init>(com.palantir.atlasdb.util.MetricsManager,\
        \ com.palantir.atlasdb.cassandra.CassandraKeyValueServiceConfig, com.palantir.refreshable.Refreshable<com.palantir.atlasdb.cassandra.CassandraKeyValueServiceRuntimeConfig>,\
        \ com.palantir.atlasdb.keyvalue.cassandra.Blacklist, com.palantir.atlasdb.keyvalue.cassandra.pool.CassandraClientPoolMetrics,\
        \ com.palantir.atlasdb.keyvalue.cassandra.CassandraClientInstrumentation)"
      justification: "Unused outside atlas"
    - code: "java.method.visibilityReduced"
      old: "method void com.palantir.atlasdb.keyvalue.cassandra.pool.CassandraService::<init>(com.palantir.atlasdb.util.MetricsManager,\
        \ com.palantir.atlasdb.cassandra.CassandraKeyValueServiceConfig, com.palantir.refreshable.Refreshable<com.palantir.atlasdb.cassandra.CassandraKeyValueServiceRuntimeConfig>,\
        \ com.palantir.atlasdb.keyvalue.cassandra.Blacklist, com.palantir.atlasdb.keyvalue.cassandra.pool.CassandraClientPoolMetrics)"
      new: "method void com.palantir.atlasdb.keyvalue.cassandra.pool.CassandraService::<init>(com.palantir.atlasdb.util.MetricsManager,\
        \ com.palantir.atlasdb.cassandra.CassandraKeyValueServiceConfig, com.palantir.refreshable.Refreshable<com.palantir.atlasdb.cassandra.CassandraKeyValueServiceRuntimeConfig>,\
        \ com.palantir.atlasdb.keyvalue.cassandra.Blacklist, com.palantir.atlasdb.keyvalue.cassandra.pool.CassandraClientPoolMetrics,\
        \ com.palantir.atlasdb.keyvalue.cassandra.CassandraClientMetrics)"
      justification: "Unused outside atlas"
  "0.1152.0":
    com.palantir.atlasdb:atlasdb-api:
    - code: "java.method.parameterTypeChanged"
      old: "parameter java.util.NavigableMap<byte[], com.palantir.atlasdb.keyvalue.api.RowResult<byte[]>>\
        \ com.palantir.atlasdb.transaction.api.snapshot.AutoDelegate_KeyValueSnapshotReader::getRows(com.palantir.atlasdb.keyvalue.api.TableReference,\
        \ java.lang.Iterable<byte[]>, com.palantir.atlasdb.keyvalue.api.ColumnSelection,\
        \ ===com.google.common.collect.ImmutableMap.Builder<com.palantir.atlasdb.keyvalue.api.Cell,\
        \ byte[]>===)"
      new: "parameter java.util.NavigableMap<byte[], com.palantir.atlasdb.keyvalue.api.RowResult<byte[]>>\
        \ com.palantir.atlasdb.transaction.api.snapshot.AutoDelegate_KeyValueSnapshotReader::getRows(com.palantir.atlasdb.keyvalue.api.TableReference,\
        \ java.lang.Iterable<byte[]>, com.palantir.atlasdb.keyvalue.api.ColumnSelection,\
        \ ===java.util.Map<com.palantir.atlasdb.keyvalue.api.Cell, byte[]>===)"
      justification: "KeyValueSnapshotReader is a relatively new API and is not widely\
        \ used"
    - code: "java.method.parameterTypeChanged"
      old: "parameter java.util.NavigableMap<byte[], com.palantir.atlasdb.keyvalue.api.RowResult<byte[]>>\
        \ com.palantir.atlasdb.transaction.api.snapshot.KeyValueSnapshotReader::getRows(com.palantir.atlasdb.keyvalue.api.TableReference,\
        \ java.lang.Iterable<byte[]>, com.palantir.atlasdb.keyvalue.api.ColumnSelection,\
        \ ===com.google.common.collect.ImmutableMap.Builder<com.palantir.atlasdb.keyvalue.api.Cell,\
        \ byte[]>===)"
      new: "parameter java.util.NavigableMap<byte[], com.palantir.atlasdb.keyvalue.api.RowResult<byte[]>>\
        \ com.palantir.atlasdb.transaction.api.snapshot.KeyValueSnapshotReader::getRows(com.palantir.atlasdb.keyvalue.api.TableReference,\
        \ java.lang.Iterable<byte[]>, com.palantir.atlasdb.keyvalue.api.ColumnSelection,\
        \ ===java.util.Map<com.palantir.atlasdb.keyvalue.api.Cell, byte[]>===)"
      justification: "KeyValueSnapshotReader is a relatively new API and is not widely\
        \ used"
  "0.770.0":
    com.palantir.atlasdb:atlasdb-api:
    - code: "java.class.removed"
      old: "class com.palantir.atlasdb.transaction.api.expectations.ImmutableExpectationsConfig"
      justification: "removing TEX until ready"
    - code: "java.class.removed"
      old: "class com.palantir.atlasdb.transaction.api.expectations.ImmutableExpectationsStatistics"
      justification: "removing TEX until ready"
    - code: "java.class.removed"
      old: "interface com.palantir.atlasdb.transaction.api.expectations.ExpectationsConfig"
      justification: "removing until TEX is ready"
    - code: "java.class.removed"
      old: "interface com.palantir.atlasdb.transaction.api.expectations.ExpectationsStatistics"
      justification: "removing TEX until ready"
  "0.774.0":
    com.palantir.atlasdb:atlasdb-cassandra:
    - code: "java.method.removed"
      old: "method <T> java.util.Map<java.lang.String, T> com.palantir.atlasdb.keyvalue.cassandra.CassandraLogHelper::mapOfHosts(java.util.Map<com.palantir.atlasdb.keyvalue.cassandra.pool.CassandraServer,\
        \ T>)"
      justification: "internal api, same package"
  "0.780.0":
    com.palantir.atlasdb:atlasdb-cassandra:
    - code: "java.method.exception.checkedRemoved"
      old: "method org.apache.thrift.transport.TSocket com.palantir.atlasdb.keyvalue.cassandra.InstrumentedTSocket.Factory::create(java.lang.String,\
        \ int, int) throws org.apache.thrift.transport.TTransportException"
      new: "method org.apache.thrift.transport.TSocket com.palantir.atlasdb.keyvalue.cassandra.InstrumentedTSocket.Factory::create(java.lang.String,\
        \ int, int)"
      justification: "revert"
  "0.787.0":
    com.palantir.atlasdb:atlasdb-cassandra:
    - code: "java.method.exception.checkedAdded"
      old: "method org.apache.thrift.transport.TSocket com.palantir.atlasdb.keyvalue.cassandra.InstrumentedTSocket.Factory::create(java.lang.String,\
        \ int, int)"
      new: "method org.apache.thrift.transport.TSocket com.palantir.atlasdb.keyvalue.cassandra.InstrumentedTSocket.Factory::create(java.lang.String,\
        \ int, int) throws org.apache.thrift.transport.TTransportException"
      justification: "required for libthrift upgrade"
  "0.792.0":
    com.palantir.atlasdb:atlasdb-cassandra:
    - code: "java.class.removed"
      old: "class com.palantir.atlasdb.cassandra.backup.CassandraRepairHelper"
      justification: "Unused backup restore code"
    - code: "java.class.removed"
      old: "class com.palantir.atlasdb.cassandra.backup.ClusterMetadataUtils"
      justification: "Unused backup restore code"
    - code: "java.class.removed"
      old: "class com.palantir.atlasdb.cassandra.backup.CqlCluster"
      justification: "Unused backup restore code"
    - code: "java.class.removed"
      old: "class com.palantir.atlasdb.cassandra.backup.ImmutableRangesForRepair"
      justification: "Unused backup restore code"
    - code: "java.class.removed"
      old: "class com.palantir.atlasdb.cassandra.backup.RangesForRepair"
      justification: "Unused backup restore code"
    - code: "java.class.removed"
      old: "interface com.palantir.atlasdb.backup.KvsRunner"
      justification: "Unused backup restore code"
    - code: "java.method.removed"
      old: "method java.util.Set<com.palantir.atlasdb.keyvalue.cassandra.LightweightOppToken>\
        \ com.palantir.atlasdb.cassandra.backup.CqlSession::retrieveRowKeysAtConsistencyAll(java.util.List<com.datastax.driver.core.Statement>)"
      justification: "Unused backup restore code"
  "0.795.0":
    com.palantir.atlasdb:atlasdb-cassandra:
    - code: "java.method.removed"
      old: "method com.palantir.atlasdb.keyvalue.cassandra.LightweightOppToken com.palantir.atlasdb.keyvalue.cassandra.LightweightOppToken::getLowerExclusive(com.google.common.collect.Range<com.palantir.atlasdb.keyvalue.cassandra.LightweightOppToken>)"
      justification: "Removing unused ABR code"
    - code: "java.method.removed"
      old: "method com.palantir.atlasdb.keyvalue.cassandra.pool.CassandraService com.palantir.atlasdb.keyvalue.cassandra.pool.CassandraService::createInitialized(com.palantir.atlasdb.util.MetricsManager,\
        \ com.palantir.atlasdb.cassandra.CassandraKeyValueServiceConfig, com.palantir.refreshable.Refreshable<com.palantir.atlasdb.cassandra.CassandraKeyValueServiceRuntimeConfig>,\
        \ com.palantir.atlasdb.keyvalue.cassandra.Blacklist, com.palantir.atlasdb.keyvalue.cassandra.pool.CassandraClientPoolMetrics)"
      justification: "Removing unused ABR code"
  "0.801.0":
    com.palantir.atlasdb:atlasdb-cassandra:
    - code: "java.method.parameterTypeChanged"
      old: "parameter java.util.Set<com.palantir.atlasdb.keyvalue.cassandra.pool.CassandraServer>\
        \ com.palantir.atlasdb.keyvalue.cassandra.CassandraTopologyValidator::getNewHostsWithInconsistentTopologiesAndRetry(===java.util.Set<com.palantir.atlasdb.keyvalue.cassandra.pool.CassandraServer>===,\
        \ java.util.Map<com.palantir.atlasdb.keyvalue.cassandra.pool.CassandraServer,\
        \ com.palantir.atlasdb.keyvalue.cassandra.CassandraClientPoolingContainer>,\
        \ java.time.Duration, java.time.Duration)"
      new: "parameter java.util.Set<com.palantir.atlasdb.keyvalue.cassandra.pool.CassandraServer>\
        \ com.palantir.atlasdb.keyvalue.cassandra.CassandraTopologyValidator::getNewHostsWithInconsistentTopologiesAndRetry(===java.util.Map<com.palantir.atlasdb.keyvalue.cassandra.pool.CassandraServer,\
        \ com.palantir.atlasdb.keyvalue.cassandra.CassandraServerOrigin>===, java.util.Map<com.palantir.atlasdb.keyvalue.cassandra.pool.CassandraServer,\
        \ com.palantir.atlasdb.keyvalue.cassandra.CassandraClientPoolingContainer>,\
        \ java.time.Duration, java.time.Duration)"
      justification: "Internal Cassandra KVS APIs"
    - code: "java.method.returnTypeChanged"
      old: "method com.google.common.collect.ImmutableSet<com.palantir.atlasdb.keyvalue.cassandra.pool.CassandraServer>\
        \ com.palantir.atlasdb.keyvalue.cassandra.pool.CassandraService::getCurrentServerListFromConfig()"
      new: "method com.google.common.collect.ImmutableMap<com.palantir.atlasdb.keyvalue.cassandra.pool.CassandraServer,\
        \ com.palantir.atlasdb.keyvalue.cassandra.CassandraServerOrigin> com.palantir.atlasdb.keyvalue.cassandra.pool.CassandraService::getCurrentServerListFromConfig()"
      justification: "Internal Cassandra KVS APIs"
    - code: "java.method.returnTypeChanged"
      old: "method com.google.common.collect.ImmutableSet<com.palantir.atlasdb.keyvalue.cassandra.pool.CassandraServer>\
        \ com.palantir.atlasdb.keyvalue.cassandra.pool.CassandraService::refreshTokenRangesAndGetServers()"
      new: "method com.google.common.collect.ImmutableMap<com.palantir.atlasdb.keyvalue.cassandra.pool.CassandraServer,\
        \ com.palantir.atlasdb.keyvalue.cassandra.CassandraServerOrigin> com.palantir.atlasdb.keyvalue.cassandra.pool.CassandraService::refreshTokenRangesAndGetServers()"
      justification: "Internal Cassandra KVS APIs"
  "0.808.0":
    com.palantir.atlasdb:atlasdb-api:
    - code: "java.class.removed"
      old: "class com.palantir.atlasdb.transaction.service.TransactionStatuses"
      justification: "Internal methods"
    - code: "java.class.removed"
      old: "interface com.palantir.atlasdb.transaction.service.TransactionStatus.Cases<R\
        \ extends java.lang.Object>"
      justification: "Internal methods"
    - code: "java.method.removed"
      old: "method <R> R com.palantir.atlasdb.transaction.service.TransactionStatus::match(com.palantir.atlasdb.transaction.service.TransactionStatus.Cases<R>)"
      justification: "Internal methods"
    - code: "java.method.removed"
      old: "method boolean com.palantir.atlasdb.transaction.service.TransactionStatus::equals(java.lang.Object)"
      justification: "Internal methods"
  "0.815.0":
    com.palantir.atlasdb:atlasdb-api:
    - code: "java.class.removed"
      old: "interface com.palantir.atlasdb.transaction.api.expectations.ExpectationsAwareTransaction"
      justification: "moving out of API"
  "0.824.0":
    com.palantir.atlasdb:atlasdb-cassandra:
    - code: "java.method.removed"
      old: "method java.util.concurrent.ExecutorService com.palantir.atlasdb.keyvalue.impl.AbstractKeyValueService::createThreadPoolWihtoutSpans(java.lang.String,\
        \ int, int) @ com.palantir.atlasdb.keyvalue.cassandra.CassandraKeyValueServiceImpl"
      justification: "Protected method"
  "0.881.0":
    com.palantir.atlasdb:atlasdb-cassandra:
    - code: "java.method.parameterTypeChanged"
      old: "parameter <T> long com.palantir.atlasdb.keyvalue.cassandra.thrift.ThriftObjectSizeUtils::getCollectionSize(java.util.Collection<T>,\
        \ ===java.util.function.Function<T, java.lang.Long>===)"
      new: "parameter <T> long com.palantir.atlasdb.keyvalue.cassandra.thrift.ThriftObjectSizeUtils::getCollectionSize(java.util.Collection<T>,\
        \ ===java.util.function.ToLongFunction<T>===)"
      justification: "Avoid autoboxing long to Long"
  "0.899.0":
    com.palantir.atlasdb:atlasdb-api:
    - code: "java.method.addedToInterface"
      new: "method com.google.common.util.concurrent.ListenableFuture<java.util.Map<com.palantir.atlasdb.keyvalue.api.Cell,\
        \ byte[]>> com.palantir.atlasdb.keyvalue.api.cache.TransactionScopedCache::getAsyncWithCachedRef(com.palantir.atlasdb.keyvalue.api.TableReference,\
        \ java.util.Set<com.palantir.atlasdb.keyvalue.api.Cell>, java.util.function.Function<com.palantir.atlasdb.keyvalue.api.cache.TransactionScopedCache.CacheLookupResult,\
        \ com.google.common.util.concurrent.ListenableFuture<java.util.Map<com.palantir.atlasdb.keyvalue.api.Cell,\
        \ byte[]>>>)"
      justification: "new Get API for Atlas to specify number of expected cells"
    - code: "java.method.addedToInterface"
      new: "method com.palantir.util.result.Result<java.util.Map<com.palantir.atlasdb.keyvalue.api.Cell,\
        \ byte[]>, com.palantir.atlasdb.transaction.api.exceptions.MoreCellsPresentThanExpectedException>\
        \ com.palantir.atlasdb.transaction.api.Transaction::getWithExpectedNumberOfCells(com.palantir.atlasdb.keyvalue.api.TableReference,\
        \ java.util.Set<com.palantir.atlasdb.keyvalue.api.Cell>, long)"
      justification: "new Get API for Atlas to specify number of expected cells"
    - code: "java.method.addedToInterface"
      new: "method java.util.Map<com.palantir.atlasdb.keyvalue.api.Cell, byte[]> com.palantir.atlasdb.keyvalue.api.cache.TransactionScopedCache::getWithCachedRef(com.palantir.atlasdb.keyvalue.api.TableReference,\
        \ java.util.Set<com.palantir.atlasdb.keyvalue.api.Cell>, java.util.function.Function<com.palantir.atlasdb.keyvalue.api.cache.TransactionScopedCache.CacheLookupResult,\
        \ com.google.common.util.concurrent.ListenableFuture<java.util.Map<com.palantir.atlasdb.keyvalue.api.Cell,\
        \ byte[]>>>)"
      justification: "new Get API for Atlas to specify number of expected cells"
    com.palantir.atlasdb:atlasdb-cassandra:
    - code: "java.method.parameterTypeChanged"
      old: "parameter void com.palantir.atlasdb.keyvalue.cassandra.RangeLoader::<init>(com.palantir.atlasdb.keyvalue.cassandra.CassandraClientPool,\
        \ com.palantir.atlasdb.keyvalue.cassandra.TracingQueryRunner, ===com.palantir.atlasdb.util.MetricsManager===,\
        \ com.palantir.atlasdb.keyvalue.cassandra.ReadConsistencyProvider)"
      new: "parameter void com.palantir.atlasdb.keyvalue.cassandra.RangeLoader::<init>(com.palantir.atlasdb.keyvalue.cassandra.CassandraClientPool,\
        \ com.palantir.atlasdb.keyvalue.cassandra.TracingQueryRunner, ===com.palantir.atlasdb.keyvalue.cassandra.ReadConsistencyProvider===,\
        \ java.util.function.Function<java.util.Map<com.palantir.atlasdb.keyvalue.api.Cell,\
        \ com.palantir.atlasdb.keyvalue.api.Value>, com.palantir.atlasdb.keyvalue.cassandra.ResultsExtractor<com.palantir.atlasdb.keyvalue.api.Value>>)"
      justification: "Reuse notLatestVisibleValueCellFilterCounter"
    - code: "java.method.parameterTypeChanged"
      old: "parameter void com.palantir.atlasdb.keyvalue.cassandra.RangeLoader::<init>(com.palantir.atlasdb.keyvalue.cassandra.CassandraClientPool,\
        \ com.palantir.atlasdb.keyvalue.cassandra.TracingQueryRunner, com.palantir.atlasdb.util.MetricsManager,\
        \ ===com.palantir.atlasdb.keyvalue.cassandra.ReadConsistencyProvider===)"
      new: "parameter void com.palantir.atlasdb.keyvalue.cassandra.RangeLoader::<init>(com.palantir.atlasdb.keyvalue.cassandra.CassandraClientPool,\
        \ com.palantir.atlasdb.keyvalue.cassandra.TracingQueryRunner, com.palantir.atlasdb.keyvalue.cassandra.ReadConsistencyProvider,\
        \ ===java.util.function.Function<java.util.Map<com.palantir.atlasdb.keyvalue.api.Cell,\
        \ com.palantir.atlasdb.keyvalue.api.Value>, com.palantir.atlasdb.keyvalue.cassandra.ResultsExtractor<com.palantir.atlasdb.keyvalue.api.Value>>===)"
      justification: "Reuse notLatestVisibleValueCellFilterCounter"
    - code: "java.method.removed"
      old: "method com.codahale.metrics.Counter com.palantir.atlasdb.keyvalue.cassandra.ResultsExtractor<T>::getNotLatestVisibleValueCellFilterCounter(java.lang.Class<?>)"
      justification: "Reuse notLatestVisibleValueCellFilterCounter"
  "0.900.0":
    com.palantir.atlasdb:atlasdb-api:
    - code: "java.method.numberOfParametersChanged"
      old: "method com.palantir.atlasdb.keyvalue.api.KeyValueService com.palantir.atlasdb.spi.AtlasDbFactory::createRawKeyValueService(com.palantir.atlasdb.util.MetricsManager,\
        \ com.palantir.atlasdb.spi.KeyValueServiceConfig, com.palantir.refreshable.Refreshable<java.util.Optional<com.palantir.atlasdb.spi.KeyValueServiceRuntimeConfig>>,\
        \ java.util.Optional<com.palantir.atlasdb.config.LeaderConfig>, java.util.Optional<java.lang.String>,\
        \ java.util.function.LongSupplier, boolean)"
      new: "method com.palantir.atlasdb.keyvalue.api.KeyValueService com.palantir.atlasdb.spi.AtlasDbFactory::createRawKeyValueService(com.palantir.atlasdb.util.MetricsManager,\
        \ com.palantir.atlasdb.spi.KeyValueServiceConfig, com.palantir.refreshable.Refreshable<java.util.Optional<com.palantir.atlasdb.spi.KeyValueServiceRuntimeConfig>>,\
        \ java.util.Optional<java.lang.String>, java.util.function.LongSupplier, boolean)"
      justification: "all usage or implementations of the two broken methods are entirely\
        \ at compile time of the consumer or within this repo itself"
    - code: "java.method.numberOfParametersChanged"
      old: "method com.palantir.atlasdb.keyvalue.api.KeyValueService com.palantir.atlasdb.timestamp.DbTimeLockFactory::createRawKeyValueService(com.palantir.atlasdb.util.MetricsManager,\
        \ com.palantir.atlasdb.spi.KeyValueServiceConfig, com.palantir.refreshable.Refreshable<java.util.Optional<com.palantir.atlasdb.spi.KeyValueServiceRuntimeConfig>>,\
        \ com.palantir.atlasdb.config.LeaderConfig, boolean)"
      new: "method com.palantir.atlasdb.keyvalue.api.KeyValueService com.palantir.atlasdb.timestamp.DbTimeLockFactory::createRawKeyValueService(com.palantir.atlasdb.util.MetricsManager,\
        \ com.palantir.atlasdb.spi.KeyValueServiceConfig, com.palantir.refreshable.Refreshable<java.util.Optional<com.palantir.atlasdb.spi.KeyValueServiceRuntimeConfig>>,\
        \ boolean)"
      justification: "all usage or implementations of the two broken methods are entirely\
        \ at compile time of the consumer or within this repo itself"
    com.palantir.atlasdb:atlasdb-cassandra:
    - code: "java.method.numberOfParametersChanged"
      old: "method com.palantir.atlasdb.keyvalue.api.KeyValueService com.palantir.atlasdb.cassandra.CassandraAtlasDbFactory::createRawKeyValueService(com.palantir.atlasdb.util.MetricsManager,\
        \ com.palantir.atlasdb.spi.KeyValueServiceConfig, com.palantir.refreshable.Refreshable<java.util.Optional<com.palantir.atlasdb.spi.KeyValueServiceRuntimeConfig>>,\
        \ java.util.Optional<com.palantir.atlasdb.config.LeaderConfig>, java.util.Optional<java.lang.String>,\
        \ java.util.function.LongSupplier, boolean)"
      new: "method com.palantir.atlasdb.keyvalue.api.KeyValueService com.palantir.atlasdb.cassandra.CassandraAtlasDbFactory::createRawKeyValueService(com.palantir.atlasdb.util.MetricsManager,\
        \ com.palantir.atlasdb.spi.KeyValueServiceConfig, com.palantir.refreshable.Refreshable<java.util.Optional<com.palantir.atlasdb.spi.KeyValueServiceRuntimeConfig>>,\
        \ java.util.Optional<java.lang.String>, java.util.function.LongSupplier, boolean)"
      justification: "will only be a compile break at worst for users and consumers"
  "0.908.0":
    com.palantir.atlasdb:atlasdb-api:
    - code: "java.method.addedToInterface"
      new: "method void com.palantir.atlasdb.transaction.api.Transaction::deleteWithMetadata(com.palantir.atlasdb.keyvalue.api.TableReference,\
        \ java.util.Map<com.palantir.atlasdb.keyvalue.api.Cell, com.palantir.lock.watch.ChangeMetadata>)"
      justification: "Adding new metadata interface methods"
    - code: "java.method.addedToInterface"
      new: "method void com.palantir.atlasdb.transaction.api.Transaction::putWithMetadata(com.palantir.atlasdb.keyvalue.api.TableReference,\
        \ java.util.Map<com.palantir.atlasdb.keyvalue.api.Cell, com.palantir.atlasdb.transaction.api.ValueAndChangeMetadata>)"
      justification: "Adding new metadata interface methods"
  "0.909.0":
    com.palantir.atlasdb:atlasdb-config:
    - code: "java.class.removed"
      old: "class com.palantir.atlasdb.factory.ImmutableLocalPaxosServices"
      justification: "None of the impacted classes are used or inherited from any\
        \ other library or product"
    - code: "java.class.removed"
      old: "class com.palantir.atlasdb.factory.ImmutableRemotePaxosServerSpec"
      justification: "None of the impacted classes are used or inherited from any\
        \ other library or product"
    - code: "java.class.removed"
      old: "class com.palantir.atlasdb.factory.Leaders"
      justification: "None of the impacted classes are used or inherited from any\
        \ other library or product"
    - code: "java.method.numberOfParametersChanged"
      old: "method void com.palantir.atlasdb.factory.DefaultLockAndTimestampServiceFactory::<init>(com.palantir.atlasdb.util.MetricsManager,\
        \ com.palantir.atlasdb.config.AtlasDbConfig, com.palantir.refreshable.Refreshable<com.palantir.atlasdb.config.AtlasDbRuntimeConfig>,\
        \ java.util.function.Consumer<java.lang.Object>, java.util.function.Supplier<com.palantir.lock.LockService>,\
        \ java.util.function.Supplier<com.palantir.timestamp.ManagedTimestampService>,\
        \ com.palantir.timestamp.TimestampStoreInvalidator, com.palantir.conjure.java.api.config.service.UserAgent,\
        \ java.util.Optional<com.palantir.atlasdb.debug.LockDiagnosticComponents>,\
        \ com.palantir.dialogue.clients.DialogueClients.ReloadingFactory, java.util.Optional<com.palantir.lock.client.metrics.TimeLockFeedbackBackgroundTask>,\
        \ java.util.Optional<com.palantir.atlasdb.config.TimeLockRequestBatcherProviders>,\
        \ java.util.Set<com.palantir.atlasdb.table.description.Schema>)"
      new: "method void com.palantir.atlasdb.factory.DefaultLockAndTimestampServiceFactory::<init>(com.palantir.atlasdb.util.MetricsManager,\
        \ com.palantir.atlasdb.config.AtlasDbConfig, com.palantir.refreshable.Refreshable<com.palantir.atlasdb.config.AtlasDbRuntimeConfig>,\
        \ java.util.function.Supplier<com.palantir.lock.LockService>, java.util.function.Supplier<com.palantir.timestamp.ManagedTimestampService>,\
        \ com.palantir.timestamp.TimestampStoreInvalidator, com.palantir.conjure.java.api.config.service.UserAgent,\
        \ java.util.Optional<com.palantir.atlasdb.debug.LockDiagnosticComponents>,\
        \ com.palantir.dialogue.clients.DialogueClients.ReloadingFactory, java.util.Optional<com.palantir.lock.client.metrics.TimeLockFeedbackBackgroundTask>,\
        \ java.util.Optional<com.palantir.atlasdb.config.TimeLockRequestBatcherProviders>,\
        \ java.util.Set<com.palantir.atlasdb.table.description.Schema>)"
      justification: "None of the impacted classes are used or inherited from any\
        \ other library or product"
    - code: "java.method.numberOfParametersChanged"
      old: "method void com.palantir.atlasdb.factory.DefaultLockAndTimestampServiceFactory::<init>(com.palantir.atlasdb.util.MetricsManager,\
        \ com.palantir.atlasdb.config.AtlasDbConfig, com.palantir.refreshable.Refreshable<com.palantir.atlasdb.config.AtlasDbRuntimeConfig>,\
        \ java.util.function.Consumer<java.lang.Object>, java.util.function.Supplier<com.palantir.lock.LockService>,\
        \ java.util.function.Supplier<com.palantir.timestamp.ManagedTimestampService>,\
        \ com.palantir.timestamp.TimestampStoreInvalidator, com.palantir.conjure.java.api.config.service.UserAgent,\
        \ java.util.Optional<com.palantir.atlasdb.debug.LockDiagnosticComponents>,\
        \ com.palantir.dialogue.clients.DialogueClients.ReloadingFactory, java.util.Optional<com.palantir.lock.client.metrics.TimeLockFeedbackBackgroundTask>,\
        \ java.util.Optional<com.palantir.atlasdb.config.TimeLockRequestBatcherProviders>,\
        \ java.util.Set<com.palantir.atlasdb.table.description.Schema>, java.util.function.Function<com.palantir.lock.v2.TimelockService,\
        \ com.palantir.lock.client.TimeLockClient>)"
      new: "method void com.palantir.atlasdb.factory.DefaultLockAndTimestampServiceFactory::<init>(com.palantir.atlasdb.util.MetricsManager,\
        \ com.palantir.atlasdb.config.AtlasDbConfig, com.palantir.refreshable.Refreshable<com.palantir.atlasdb.config.AtlasDbRuntimeConfig>,\
        \ java.util.function.Supplier<com.palantir.lock.LockService>, java.util.function.Supplier<com.palantir.timestamp.ManagedTimestampService>,\
        \ com.palantir.timestamp.TimestampStoreInvalidator, com.palantir.conjure.java.api.config.service.UserAgent,\
        \ java.util.Optional<com.palantir.atlasdb.debug.LockDiagnosticComponents>,\
        \ com.palantir.dialogue.clients.DialogueClients.ReloadingFactory, java.util.Optional<com.palantir.lock.client.metrics.TimeLockFeedbackBackgroundTask>,\
        \ java.util.Optional<com.palantir.atlasdb.config.TimeLockRequestBatcherProviders>,\
        \ java.util.Set<com.palantir.atlasdb.table.description.Schema>, java.util.function.Function<com.palantir.lock.v2.TimelockService,\
        \ com.palantir.lock.client.TimeLockClient>)"
      justification: "None of the impacted classes are used or inherited from any\
        \ other library or product"
  "0.936.0":
    com.palantir.atlasdb:atlasdb-cassandra:
    - code: "java.method.visibilityReduced"
      old: "method void com.palantir.atlasdb.keyvalue.cassandra.CassandraTopologyValidator::<init>(com.palantir.atlasdb.CassandraTopologyValidationMetrics)"
      new: "method void com.palantir.atlasdb.keyvalue.cassandra.CassandraTopologyValidator::<init>(com.palantir.atlasdb.CassandraTopologyValidationMetrics,\
        \ java.util.function.Supplier<java.util.Set<java.lang.String>>)"
      justification: "internal API"
  "0.942.0":
    com.palantir.atlasdb:atlasdb-cassandra:
    - code: "java.method.removed"
      old: "method void com.palantir.atlasdb.keyvalue.cassandra.pool.CassandraService::cacheInitialCassandraHosts()"
      justification: "Only used internally"
    - code: "java.method.visibilityReduced"
      old: "method void com.palantir.atlasdb.keyvalue.cassandra.CassandraTopologyValidator::<init>(com.palantir.atlasdb.CassandraTopologyValidationMetrics)"
      new: "method void com.palantir.atlasdb.keyvalue.cassandra.CassandraTopologyValidator::<init>(com.palantir.atlasdb.CassandraTopologyValidationMetrics,\
        \ com.palantir.common.base.FunctionCheckedException<com.palantir.atlasdb.keyvalue.cassandra.pool.CassandraServer,\
        \ com.palantir.atlasdb.keyvalue.cassandra.CassandraClient, org.apache.thrift.TException>,\
        \ java.util.function.Supplier<java.util.Set<java.lang.String>>)"
      justification: "Only used internally"
  "0.947.0":
    com.palantir.atlasdb:atlasdb-cassandra:
    - code: "java.class.removed"
      old: "class com.palantir.atlasdb.keyvalue.cassandra.ImmutableConsistentClusterTopology"
      justification: "Internal validator primitives"
    - code: "java.class.removed"
      old: "interface com.palantir.atlasdb.keyvalue.cassandra.CassandraTopologyValidator.ConsistentClusterTopology"
      justification: "Internal validator primitives"
    - code: "java.method.addedToInterface"
      new: "method java.util.Optional<com.palantir.atlasdb.keyvalue.cassandra.CassandraTopologyValidator.ConsistentClusterTopologies>\
        \ com.palantir.atlasdb.keyvalue.cassandra.CassandraTopologyValidator.ClusterTopologyResult::agreedTopologies()"
      justification: "Internal validator primitives"
    - code: "java.method.parameterTypeChanged"
      old: "parameter com.palantir.atlasdb.keyvalue.cassandra.CassandraTopologyValidator.ClusterTopologyResult\
        \ com.palantir.atlasdb.keyvalue.cassandra.CassandraTopologyValidator.ClusterTopologyResult::consensus(===com.palantir.atlasdb.keyvalue.cassandra.CassandraTopologyValidator.ConsistentClusterTopology===)"
      new: "parameter com.palantir.atlasdb.keyvalue.cassandra.CassandraTopologyValidator.ClusterTopologyResult\
        \ com.palantir.atlasdb.keyvalue.cassandra.CassandraTopologyValidator.ClusterTopologyResult::consensus(===com.palantir.atlasdb.keyvalue.cassandra.CassandraTopologyValidator.ConsistentClusterTopologies===)"
      justification: "Internal validator primitives"
    - code: "java.method.removed"
      old: "method com.palantir.atlasdb.keyvalue.cassandra.ImmutableClusterTopologyResult\
        \ com.palantir.atlasdb.keyvalue.cassandra.ImmutableClusterTopologyResult::withAgreedTopology(com.palantir.atlasdb.keyvalue.cassandra.CassandraTopologyValidator.ConsistentClusterTopology)"
      justification: "Internal validator primitives"
    - code: "java.method.removed"
      old: "method com.palantir.atlasdb.keyvalue.cassandra.ImmutableClusterTopologyResult\
        \ com.palantir.atlasdb.keyvalue.cassandra.ImmutableClusterTopologyResult::withAgreedTopology(java.util.Optional<?\
        \ extends com.palantir.atlasdb.keyvalue.cassandra.CassandraTopologyValidator.ConsistentClusterTopology>)"
      justification: "Internal validator primitives"
    - code: "java.method.removed"
      old: "method com.palantir.atlasdb.keyvalue.cassandra.ImmutableClusterTopologyResult.Builder\
        \ com.palantir.atlasdb.keyvalue.cassandra.ImmutableClusterTopologyResult.Builder::agreedTopology(com.palantir.atlasdb.keyvalue.cassandra.CassandraTopologyValidator.ConsistentClusterTopology)"
      justification: "Internal validator primitives"
    - code: "java.method.removed"
      old: "method com.palantir.atlasdb.keyvalue.cassandra.ImmutableClusterTopologyResult.Builder\
        \ com.palantir.atlasdb.keyvalue.cassandra.ImmutableClusterTopologyResult.Builder::agreedTopology(java.util.Optional<?\
        \ extends com.palantir.atlasdb.keyvalue.cassandra.CassandraTopologyValidator.ConsistentClusterTopology>)"
      justification: "Internal validator primitives"
    - code: "java.method.removed"
      old: "method java.util.Optional<com.palantir.atlasdb.keyvalue.cassandra.CassandraTopologyValidator.ConsistentClusterTopology>\
        \ com.palantir.atlasdb.keyvalue.cassandra.CassandraTopologyValidator.ClusterTopologyResult::agreedTopology()"
      justification: "Internal validator primitives"
    - code: "java.method.removed"
      old: "method java.util.Optional<com.palantir.atlasdb.keyvalue.cassandra.CassandraTopologyValidator.ConsistentClusterTopology>\
        \ com.palantir.atlasdb.keyvalue.cassandra.ImmutableClusterTopologyResult::agreedTopology()"
      justification: "Internal validator primitives"
  "0.956.0":
    com.palantir.atlasdb:atlasdb-api:
    - code: "java.method.numberOfParametersChanged"
      old: "method void com.palantir.atlasdb.keyvalue.api.KeyAlreadyExistsException::<init>(java.lang.String)"
      new: "method void com.palantir.atlasdb.keyvalue.api.KeyAlreadyExistsException::<init>(java.lang.String,\
        \ com.palantir.logsafe.Arg<?>[])"
      justification: "Verified that internal consumers are using compiletimeconstant\
        \ strings"
    - code: "java.method.numberOfParametersChanged"
      old: "method void com.palantir.atlasdb.keyvalue.api.KeyAlreadyExistsException::<init>(java.lang.String,\
        \ java.lang.Iterable<com.palantir.atlasdb.keyvalue.api.Cell>)"
      new: "method void com.palantir.atlasdb.keyvalue.api.KeyAlreadyExistsException::<init>(java.lang.String,\
        \ java.lang.Iterable<com.palantir.atlasdb.keyvalue.api.Cell>, com.palantir.logsafe.Arg<?>[])"
      justification: "Verified that internal consumers are using compiletimeconstant\
        \ strings"
    - code: "java.method.numberOfParametersChanged"
      old: "method void com.palantir.atlasdb.keyvalue.api.KeyAlreadyExistsException::<init>(java.lang.String,\
        \ java.lang.Iterable<com.palantir.atlasdb.keyvalue.api.Cell>, java.lang.Iterable<com.palantir.atlasdb.keyvalue.api.Cell>)"
      new: "method void com.palantir.atlasdb.keyvalue.api.KeyAlreadyExistsException::<init>(java.lang.String,\
        \ java.lang.Iterable<com.palantir.atlasdb.keyvalue.api.Cell>, java.lang.Iterable<com.palantir.atlasdb.keyvalue.api.Cell>,\
        \ com.palantir.logsafe.Arg<?>[])"
      justification: "Verified that internal consumers are using compiletimeconstant\
        \ strings"
    - code: "java.method.numberOfParametersChanged"
      old: "method void com.palantir.atlasdb.keyvalue.api.KeyAlreadyExistsException::<init>(java.lang.String,\
        \ java.lang.Throwable)"
      new: "method void com.palantir.atlasdb.keyvalue.api.KeyAlreadyExistsException::<init>(java.lang.String,\
        \ java.lang.Throwable, com.palantir.logsafe.Arg<?>[])"
      justification: "Verified that internal consumers are using compiletimeconstant\
        \ strings"
    - code: "java.method.numberOfParametersChanged"
      old: "method void com.palantir.atlasdb.keyvalue.api.KeyAlreadyExistsException::<init>(java.lang.String,\
        \ java.lang.Throwable, java.lang.Iterable<com.palantir.atlasdb.keyvalue.api.Cell>)"
      new: "method void com.palantir.atlasdb.keyvalue.api.KeyAlreadyExistsException::<init>(java.lang.String,\
        \ java.lang.Throwable, java.lang.Iterable<com.palantir.atlasdb.keyvalue.api.Cell>,\
        \ com.palantir.logsafe.Arg<?>[])"
      justification: "Verified that internal consumers are using compiletimeconstant\
        \ strings"
  "0.977.0":
    com.palantir.atlasdb:atlasdb-config:
    - code: "java.method.parameterTypeChanged"
      old: "parameter com.palantir.atlasdb.factory.ImmutableTransactionManagers com.palantir.atlasdb.factory.ImmutableTransactionManagers::withDefaultTimelockClientFactory(===java.util.function.Function<com.palantir.lock.v2.TimelockService,\
        \ com.palantir.lock.client.TimeLockClient>===)"
      new: "parameter com.palantir.atlasdb.factory.ImmutableTransactionManagers com.palantir.atlasdb.factory.ImmutableTransactionManagers::withDefaultTimelockClientFactory(===java.util.function.BiFunction<com.palantir.lock.v2.TimelockService,\
        \ com.palantir.timestamp.TimestampManagementService, com.palantir.lock.client.TimeLockClient>===)"
      justification: "This is only used for antithesis tests"
    - code: "java.method.parameterTypeChanged"
      old: "parameter com.palantir.atlasdb.factory.ImmutableTransactionManagers.BuildFinal\
        \ com.palantir.atlasdb.factory.ImmutableTransactionManagers.BuildFinal::defaultTimelockClientFactory(===java.util.function.Function<com.palantir.lock.v2.TimelockService,\
        \ com.palantir.lock.client.TimeLockClient>===)"
      new: "parameter com.palantir.atlasdb.factory.ImmutableTransactionManagers.BuildFinal\
        \ com.palantir.atlasdb.factory.ImmutableTransactionManagers.BuildFinal::defaultTimelockClientFactory(===java.util.function.BiFunction<com.palantir.lock.v2.TimelockService,\
        \ com.palantir.timestamp.TimestampManagementService, com.palantir.lock.client.TimeLockClient>===)"
      justification: "This is only used for antithesis tests"
    - code: "java.method.parameterTypeChanged"
      old: "parameter com.palantir.atlasdb.factory.ImmutableTransactionManagers.Builder\
        \ com.palantir.atlasdb.factory.ImmutableTransactionManagers.Builder::defaultTimelockClientFactory(===java.util.function.Function<com.palantir.lock.v2.TimelockService,\
        \ com.palantir.lock.client.TimeLockClient>===)"
      new: "parameter com.palantir.atlasdb.factory.ImmutableTransactionManagers.Builder\
        \ com.palantir.atlasdb.factory.ImmutableTransactionManagers.Builder::defaultTimelockClientFactory(===java.util.function.BiFunction<com.palantir.lock.v2.TimelockService,\
        \ com.palantir.timestamp.TimestampManagementService, com.palantir.lock.client.TimeLockClient>===)"
      justification: "This is only used for antithesis tests"
    - code: "java.method.parameterTypeChanged"
      old: "parameter void com.palantir.atlasdb.factory.DefaultLockAndTimestampServiceFactory::<init>(com.palantir.atlasdb.util.MetricsManager,\
        \ com.palantir.atlasdb.config.AtlasDbConfig, com.palantir.refreshable.Refreshable<com.palantir.atlasdb.config.AtlasDbRuntimeConfig>,\
        \ java.util.function.Supplier<com.palantir.lock.LockService>, java.util.function.Supplier<com.palantir.timestamp.ManagedTimestampService>,\
        \ com.palantir.timestamp.TimestampStoreInvalidator, com.palantir.conjure.java.api.config.service.UserAgent,\
        \ java.util.Optional<com.palantir.atlasdb.debug.LockDiagnosticComponents>,\
        \ com.palantir.dialogue.clients.DialogueClients.ReloadingFactory, java.util.Optional<com.palantir.lock.client.metrics.TimeLockFeedbackBackgroundTask>,\
        \ java.util.Optional<com.palantir.atlasdb.config.TimeLockRequestBatcherProviders>,\
        \ java.util.Set<com.palantir.atlasdb.table.description.Schema>, ===java.util.function.Function<com.palantir.lock.v2.TimelockService,\
        \ com.palantir.lock.client.TimeLockClient>===)"
      new: "parameter void com.palantir.atlasdb.factory.DefaultLockAndTimestampServiceFactory::<init>(com.palantir.atlasdb.util.MetricsManager,\
        \ com.palantir.atlasdb.config.AtlasDbConfig, com.palantir.refreshable.Refreshable<com.palantir.atlasdb.config.AtlasDbRuntimeConfig>,\
        \ java.util.function.Supplier<com.palantir.lock.LockService>, java.util.function.Supplier<com.palantir.timestamp.ManagedTimestampService>,\
        \ com.palantir.timestamp.TimestampStoreInvalidator, com.palantir.conjure.java.api.config.service.UserAgent,\
        \ java.util.Optional<com.palantir.atlasdb.debug.LockDiagnosticComponents>,\
        \ com.palantir.dialogue.clients.DialogueClients.ReloadingFactory, java.util.Optional<com.palantir.lock.client.metrics.TimeLockFeedbackBackgroundTask>,\
        \ java.util.Optional<com.palantir.atlasdb.config.TimeLockRequestBatcherProviders>,\
        \ java.util.Set<com.palantir.atlasdb.table.description.Schema>, ===java.util.function.BiFunction<com.palantir.lock.v2.TimelockService,\
        \ com.palantir.timestamp.TimestampManagementService, com.palantir.lock.client.TimeLockClient>===)"
      justification: "This is only used for antithesis tests"
