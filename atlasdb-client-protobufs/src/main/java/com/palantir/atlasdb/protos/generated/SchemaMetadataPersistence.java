// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: main/proto/com/palantir/atlasdb/protos/SchemaMetadataPersistence.proto

package com.palantir.atlasdb.protos.generated;

public final class SchemaMetadataPersistence {
  private SchemaMetadataPersistence() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  /**
   * Protobuf enum {@code com.palantir.atlasdb.protos.generated.CleanupRequirement}
   */
  public enum CleanupRequirement
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>NOT_NEEDED = 0;</code>
     *
     * <pre>
     * Used for tables without cleanup tasks.
     * </pre>
     */
    NOT_NEEDED(0, 0),
    /**
     * <code>ARBITRARY_ASYNC = 64;</code>
     *
     * <pre>
     * Used for tables (possibly inclusive of stream-store meta-tables) that have user-defined cleanup tasks
     * which can safely be processed asynchronously (e.g. via a queue).
     * Examples include cascading deletes and reads from append-only Atlas tables.
     * </pre>
     */
    ARBITRARY_ASYNC(1, 64),
    ;

    /**
     * <code>NOT_NEEDED = 0;</code>
     *
     * <pre>
     * Used for tables without cleanup tasks.
     * </pre>
     */
    public static final int NOT_NEEDED_VALUE = 0;
    /**
     * <code>ARBITRARY_ASYNC = 64;</code>
     *
     * <pre>
     * Used for tables (possibly inclusive of stream-store meta-tables) that have user-defined cleanup tasks
     * which can safely be processed asynchronously (e.g. via a queue).
     * Examples include cascading deletes and reads from append-only Atlas tables.
     * </pre>
     */
    public static final int ARBITRARY_ASYNC_VALUE = 64;


    public final int getNumber() { return value; }

    public static CleanupRequirement valueOf(int value) {
      switch (value) {
        case 0: return NOT_NEEDED;
        case 64: return ARBITRARY_ASYNC;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<CleanupRequirement>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<CleanupRequirement>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<CleanupRequirement>() {
            public CleanupRequirement findValueByNumber(int number) {
              return CleanupRequirement.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.getDescriptor().getEnumTypes().get(0);
    }

    private static final CleanupRequirement[] VALUES = values();

    public static CleanupRequirement valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private CleanupRequirement(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.palantir.atlasdb.protos.generated.CleanupRequirement)
  }

  public interface SchemaMetadataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.palantir.atlasdb.protos.generated.SchemaMetadata)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .com.palantir.atlasdb.protos.generated.SchemaDependentTableMetadataEntry tableMetadata = 1;</code>
     *
     * <pre>
     * Using this rather than map, to avoid introducing a dependency on proto3
     * TODO (jkong): Eventually coordinate a shift to proto3
     * </pre>
     */
    java.util.List<com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadataEntry> 
        getTableMetadataList();
    /**
     * <code>repeated .com.palantir.atlasdb.protos.generated.SchemaDependentTableMetadataEntry tableMetadata = 1;</code>
     *
     * <pre>
     * Using this rather than map, to avoid introducing a dependency on proto3
     * TODO (jkong): Eventually coordinate a shift to proto3
     * </pre>
     */
    com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadataEntry getTableMetadata(int index);
    /**
     * <code>repeated .com.palantir.atlasdb.protos.generated.SchemaDependentTableMetadataEntry tableMetadata = 1;</code>
     *
     * <pre>
     * Using this rather than map, to avoid introducing a dependency on proto3
     * TODO (jkong): Eventually coordinate a shift to proto3
     * </pre>
     */
    int getTableMetadataCount();
    /**
     * <code>repeated .com.palantir.atlasdb.protos.generated.SchemaDependentTableMetadataEntry tableMetadata = 1;</code>
     *
     * <pre>
     * Using this rather than map, to avoid introducing a dependency on proto3
     * TODO (jkong): Eventually coordinate a shift to proto3
     * </pre>
     */
    java.util.List<? extends com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadataEntryOrBuilder> 
        getTableMetadataOrBuilderList();
    /**
     * <code>repeated .com.palantir.atlasdb.protos.generated.SchemaDependentTableMetadataEntry tableMetadata = 1;</code>
     *
     * <pre>
     * Using this rather than map, to avoid introducing a dependency on proto3
     * TODO (jkong): Eventually coordinate a shift to proto3
     * </pre>
     */
    com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadataEntryOrBuilder getTableMetadataOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code com.palantir.atlasdb.protos.generated.SchemaMetadata}
   */
  public static final class SchemaMetadata extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.palantir.atlasdb.protos.generated.SchemaMetadata)
      SchemaMetadataOrBuilder {
    // Use SchemaMetadata.newBuilder() to construct.
    private SchemaMetadata(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SchemaMetadata(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SchemaMetadata defaultInstance;
    public static SchemaMetadata getDefaultInstance() {
      return defaultInstance;
    }

    public SchemaMetadata getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SchemaMetadata(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                tableMetadata_ = new java.util.ArrayList<com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadataEntry>();
                mutable_bitField0_ |= 0x00000001;
              }
              tableMetadata_.add(input.readMessage(com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadataEntry.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          tableMetadata_ = java.util.Collections.unmodifiableList(tableMetadata_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.internal_static_com_palantir_atlasdb_protos_generated_SchemaMetadata_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.internal_static_com_palantir_atlasdb_protos_generated_SchemaMetadata_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaMetadata.class, com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaMetadata.Builder.class);
    }

    public static com.google.protobuf.Parser<SchemaMetadata> PARSER =
        new com.google.protobuf.AbstractParser<SchemaMetadata>() {
      public SchemaMetadata parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SchemaMetadata(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SchemaMetadata> getParserForType() {
      return PARSER;
    }

    public static final int TABLEMETADATA_FIELD_NUMBER = 1;
    private java.util.List<com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadataEntry> tableMetadata_;
    /**
     * <code>repeated .com.palantir.atlasdb.protos.generated.SchemaDependentTableMetadataEntry tableMetadata = 1;</code>
     *
     * <pre>
     * Using this rather than map, to avoid introducing a dependency on proto3
     * TODO (jkong): Eventually coordinate a shift to proto3
     * </pre>
     */
    public java.util.List<com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadataEntry> getTableMetadataList() {
      return tableMetadata_;
    }
    /**
     * <code>repeated .com.palantir.atlasdb.protos.generated.SchemaDependentTableMetadataEntry tableMetadata = 1;</code>
     *
     * <pre>
     * Using this rather than map, to avoid introducing a dependency on proto3
     * TODO (jkong): Eventually coordinate a shift to proto3
     * </pre>
     */
    public java.util.List<? extends com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadataEntryOrBuilder> 
        getTableMetadataOrBuilderList() {
      return tableMetadata_;
    }
    /**
     * <code>repeated .com.palantir.atlasdb.protos.generated.SchemaDependentTableMetadataEntry tableMetadata = 1;</code>
     *
     * <pre>
     * Using this rather than map, to avoid introducing a dependency on proto3
     * TODO (jkong): Eventually coordinate a shift to proto3
     * </pre>
     */
    public int getTableMetadataCount() {
      return tableMetadata_.size();
    }
    /**
     * <code>repeated .com.palantir.atlasdb.protos.generated.SchemaDependentTableMetadataEntry tableMetadata = 1;</code>
     *
     * <pre>
     * Using this rather than map, to avoid introducing a dependency on proto3
     * TODO (jkong): Eventually coordinate a shift to proto3
     * </pre>
     */
    public com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadataEntry getTableMetadata(int index) {
      return tableMetadata_.get(index);
    }
    /**
     * <code>repeated .com.palantir.atlasdb.protos.generated.SchemaDependentTableMetadataEntry tableMetadata = 1;</code>
     *
     * <pre>
     * Using this rather than map, to avoid introducing a dependency on proto3
     * TODO (jkong): Eventually coordinate a shift to proto3
     * </pre>
     */
    public com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadataEntryOrBuilder getTableMetadataOrBuilder(
        int index) {
      return tableMetadata_.get(index);
    }

    private void initFields() {
      tableMetadata_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < tableMetadata_.size(); i++) {
        output.writeMessage(1, tableMetadata_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < tableMetadata_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, tableMetadata_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaMetadata parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaMetadata parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaMetadata parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaMetadata parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaMetadata parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaMetadata parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaMetadata parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaMetadata parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaMetadata parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaMetadata parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaMetadata prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.palantir.atlasdb.protos.generated.SchemaMetadata}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.palantir.atlasdb.protos.generated.SchemaMetadata)
        com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaMetadataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.internal_static_com_palantir_atlasdb_protos_generated_SchemaMetadata_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.internal_static_com_palantir_atlasdb_protos_generated_SchemaMetadata_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaMetadata.class, com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaMetadata.Builder.class);
      }

      // Construct using com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaMetadata.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getTableMetadataFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (tableMetadataBuilder_ == null) {
          tableMetadata_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          tableMetadataBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.internal_static_com_palantir_atlasdb_protos_generated_SchemaMetadata_descriptor;
      }

      public com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaMetadata getDefaultInstanceForType() {
        return com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaMetadata.getDefaultInstance();
      }

      public com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaMetadata build() {
        com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaMetadata result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaMetadata buildPartial() {
        com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaMetadata result = new com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaMetadata(this);
        int from_bitField0_ = bitField0_;
        if (tableMetadataBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            tableMetadata_ = java.util.Collections.unmodifiableList(tableMetadata_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.tableMetadata_ = tableMetadata_;
        } else {
          result.tableMetadata_ = tableMetadataBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaMetadata) {
          return mergeFrom((com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaMetadata)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaMetadata other) {
        if (other == com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaMetadata.getDefaultInstance()) return this;
        if (tableMetadataBuilder_ == null) {
          if (!other.tableMetadata_.isEmpty()) {
            if (tableMetadata_.isEmpty()) {
              tableMetadata_ = other.tableMetadata_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureTableMetadataIsMutable();
              tableMetadata_.addAll(other.tableMetadata_);
            }
            onChanged();
          }
        } else {
          if (!other.tableMetadata_.isEmpty()) {
            if (tableMetadataBuilder_.isEmpty()) {
              tableMetadataBuilder_.dispose();
              tableMetadataBuilder_ = null;
              tableMetadata_ = other.tableMetadata_;
              bitField0_ = (bitField0_ & ~0x00000001);
              tableMetadataBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getTableMetadataFieldBuilder() : null;
            } else {
              tableMetadataBuilder_.addAllMessages(other.tableMetadata_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaMetadata parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaMetadata) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadataEntry> tableMetadata_ =
        java.util.Collections.emptyList();
      private void ensureTableMetadataIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          tableMetadata_ = new java.util.ArrayList<com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadataEntry>(tableMetadata_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadataEntry, com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadataEntry.Builder, com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadataEntryOrBuilder> tableMetadataBuilder_;

      /**
       * <code>repeated .com.palantir.atlasdb.protos.generated.SchemaDependentTableMetadataEntry tableMetadata = 1;</code>
       *
       * <pre>
       * Using this rather than map, to avoid introducing a dependency on proto3
       * TODO (jkong): Eventually coordinate a shift to proto3
       * </pre>
       */
      public java.util.List<com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadataEntry> getTableMetadataList() {
        if (tableMetadataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(tableMetadata_);
        } else {
          return tableMetadataBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.palantir.atlasdb.protos.generated.SchemaDependentTableMetadataEntry tableMetadata = 1;</code>
       *
       * <pre>
       * Using this rather than map, to avoid introducing a dependency on proto3
       * TODO (jkong): Eventually coordinate a shift to proto3
       * </pre>
       */
      public int getTableMetadataCount() {
        if (tableMetadataBuilder_ == null) {
          return tableMetadata_.size();
        } else {
          return tableMetadataBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.palantir.atlasdb.protos.generated.SchemaDependentTableMetadataEntry tableMetadata = 1;</code>
       *
       * <pre>
       * Using this rather than map, to avoid introducing a dependency on proto3
       * TODO (jkong): Eventually coordinate a shift to proto3
       * </pre>
       */
      public com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadataEntry getTableMetadata(int index) {
        if (tableMetadataBuilder_ == null) {
          return tableMetadata_.get(index);
        } else {
          return tableMetadataBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.palantir.atlasdb.protos.generated.SchemaDependentTableMetadataEntry tableMetadata = 1;</code>
       *
       * <pre>
       * Using this rather than map, to avoid introducing a dependency on proto3
       * TODO (jkong): Eventually coordinate a shift to proto3
       * </pre>
       */
      public Builder setTableMetadata(
          int index, com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadataEntry value) {
        if (tableMetadataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTableMetadataIsMutable();
          tableMetadata_.set(index, value);
          onChanged();
        } else {
          tableMetadataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.palantir.atlasdb.protos.generated.SchemaDependentTableMetadataEntry tableMetadata = 1;</code>
       *
       * <pre>
       * Using this rather than map, to avoid introducing a dependency on proto3
       * TODO (jkong): Eventually coordinate a shift to proto3
       * </pre>
       */
      public Builder setTableMetadata(
          int index, com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadataEntry.Builder builderForValue) {
        if (tableMetadataBuilder_ == null) {
          ensureTableMetadataIsMutable();
          tableMetadata_.set(index, builderForValue.build());
          onChanged();
        } else {
          tableMetadataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.palantir.atlasdb.protos.generated.SchemaDependentTableMetadataEntry tableMetadata = 1;</code>
       *
       * <pre>
       * Using this rather than map, to avoid introducing a dependency on proto3
       * TODO (jkong): Eventually coordinate a shift to proto3
       * </pre>
       */
      public Builder addTableMetadata(com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadataEntry value) {
        if (tableMetadataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTableMetadataIsMutable();
          tableMetadata_.add(value);
          onChanged();
        } else {
          tableMetadataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.palantir.atlasdb.protos.generated.SchemaDependentTableMetadataEntry tableMetadata = 1;</code>
       *
       * <pre>
       * Using this rather than map, to avoid introducing a dependency on proto3
       * TODO (jkong): Eventually coordinate a shift to proto3
       * </pre>
       */
      public Builder addTableMetadata(
          int index, com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadataEntry value) {
        if (tableMetadataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTableMetadataIsMutable();
          tableMetadata_.add(index, value);
          onChanged();
        } else {
          tableMetadataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.palantir.atlasdb.protos.generated.SchemaDependentTableMetadataEntry tableMetadata = 1;</code>
       *
       * <pre>
       * Using this rather than map, to avoid introducing a dependency on proto3
       * TODO (jkong): Eventually coordinate a shift to proto3
       * </pre>
       */
      public Builder addTableMetadata(
          com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadataEntry.Builder builderForValue) {
        if (tableMetadataBuilder_ == null) {
          ensureTableMetadataIsMutable();
          tableMetadata_.add(builderForValue.build());
          onChanged();
        } else {
          tableMetadataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.palantir.atlasdb.protos.generated.SchemaDependentTableMetadataEntry tableMetadata = 1;</code>
       *
       * <pre>
       * Using this rather than map, to avoid introducing a dependency on proto3
       * TODO (jkong): Eventually coordinate a shift to proto3
       * </pre>
       */
      public Builder addTableMetadata(
          int index, com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadataEntry.Builder builderForValue) {
        if (tableMetadataBuilder_ == null) {
          ensureTableMetadataIsMutable();
          tableMetadata_.add(index, builderForValue.build());
          onChanged();
        } else {
          tableMetadataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.palantir.atlasdb.protos.generated.SchemaDependentTableMetadataEntry tableMetadata = 1;</code>
       *
       * <pre>
       * Using this rather than map, to avoid introducing a dependency on proto3
       * TODO (jkong): Eventually coordinate a shift to proto3
       * </pre>
       */
      public Builder addAllTableMetadata(
          java.lang.Iterable<? extends com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadataEntry> values) {
        if (tableMetadataBuilder_ == null) {
          ensureTableMetadataIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, tableMetadata_);
          onChanged();
        } else {
          tableMetadataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.palantir.atlasdb.protos.generated.SchemaDependentTableMetadataEntry tableMetadata = 1;</code>
       *
       * <pre>
       * Using this rather than map, to avoid introducing a dependency on proto3
       * TODO (jkong): Eventually coordinate a shift to proto3
       * </pre>
       */
      public Builder clearTableMetadata() {
        if (tableMetadataBuilder_ == null) {
          tableMetadata_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          tableMetadataBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.palantir.atlasdb.protos.generated.SchemaDependentTableMetadataEntry tableMetadata = 1;</code>
       *
       * <pre>
       * Using this rather than map, to avoid introducing a dependency on proto3
       * TODO (jkong): Eventually coordinate a shift to proto3
       * </pre>
       */
      public Builder removeTableMetadata(int index) {
        if (tableMetadataBuilder_ == null) {
          ensureTableMetadataIsMutable();
          tableMetadata_.remove(index);
          onChanged();
        } else {
          tableMetadataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.palantir.atlasdb.protos.generated.SchemaDependentTableMetadataEntry tableMetadata = 1;</code>
       *
       * <pre>
       * Using this rather than map, to avoid introducing a dependency on proto3
       * TODO (jkong): Eventually coordinate a shift to proto3
       * </pre>
       */
      public com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadataEntry.Builder getTableMetadataBuilder(
          int index) {
        return getTableMetadataFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.palantir.atlasdb.protos.generated.SchemaDependentTableMetadataEntry tableMetadata = 1;</code>
       *
       * <pre>
       * Using this rather than map, to avoid introducing a dependency on proto3
       * TODO (jkong): Eventually coordinate a shift to proto3
       * </pre>
       */
      public com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadataEntryOrBuilder getTableMetadataOrBuilder(
          int index) {
        if (tableMetadataBuilder_ == null) {
          return tableMetadata_.get(index);  } else {
          return tableMetadataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.palantir.atlasdb.protos.generated.SchemaDependentTableMetadataEntry tableMetadata = 1;</code>
       *
       * <pre>
       * Using this rather than map, to avoid introducing a dependency on proto3
       * TODO (jkong): Eventually coordinate a shift to proto3
       * </pre>
       */
      public java.util.List<? extends com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadataEntryOrBuilder> 
           getTableMetadataOrBuilderList() {
        if (tableMetadataBuilder_ != null) {
          return tableMetadataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(tableMetadata_);
        }
      }
      /**
       * <code>repeated .com.palantir.atlasdb.protos.generated.SchemaDependentTableMetadataEntry tableMetadata = 1;</code>
       *
       * <pre>
       * Using this rather than map, to avoid introducing a dependency on proto3
       * TODO (jkong): Eventually coordinate a shift to proto3
       * </pre>
       */
      public com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadataEntry.Builder addTableMetadataBuilder() {
        return getTableMetadataFieldBuilder().addBuilder(
            com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadataEntry.getDefaultInstance());
      }
      /**
       * <code>repeated .com.palantir.atlasdb.protos.generated.SchemaDependentTableMetadataEntry tableMetadata = 1;</code>
       *
       * <pre>
       * Using this rather than map, to avoid introducing a dependency on proto3
       * TODO (jkong): Eventually coordinate a shift to proto3
       * </pre>
       */
      public com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadataEntry.Builder addTableMetadataBuilder(
          int index) {
        return getTableMetadataFieldBuilder().addBuilder(
            index, com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadataEntry.getDefaultInstance());
      }
      /**
       * <code>repeated .com.palantir.atlasdb.protos.generated.SchemaDependentTableMetadataEntry tableMetadata = 1;</code>
       *
       * <pre>
       * Using this rather than map, to avoid introducing a dependency on proto3
       * TODO (jkong): Eventually coordinate a shift to proto3
       * </pre>
       */
      public java.util.List<com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadataEntry.Builder> 
           getTableMetadataBuilderList() {
        return getTableMetadataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadataEntry, com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadataEntry.Builder, com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadataEntryOrBuilder> 
          getTableMetadataFieldBuilder() {
        if (tableMetadataBuilder_ == null) {
          tableMetadataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadataEntry, com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadataEntry.Builder, com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadataEntryOrBuilder>(
                  tableMetadata_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          tableMetadata_ = null;
        }
        return tableMetadataBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:com.palantir.atlasdb.protos.generated.SchemaMetadata)
    }

    static {
      defaultInstance = new SchemaMetadata(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.palantir.atlasdb.protos.generated.SchemaMetadata)
  }

  public interface SchemaDependentTableMetadataEntryOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.palantir.atlasdb.protos.generated.SchemaDependentTableMetadataEntry)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .com.palantir.atlasdb.protos.generated.TableReference tableReference = 1;</code>
     */
    boolean hasTableReference();
    /**
     * <code>optional .com.palantir.atlasdb.protos.generated.TableReference tableReference = 1;</code>
     */
    com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.TableReference getTableReference();
    /**
     * <code>optional .com.palantir.atlasdb.protos.generated.TableReference tableReference = 1;</code>
     */
    com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.TableReferenceOrBuilder getTableReferenceOrBuilder();

    /**
     * <code>optional .com.palantir.atlasdb.protos.generated.SchemaDependentTableMetadata schemaDependentTableMetadata = 2;</code>
     */
    boolean hasSchemaDependentTableMetadata();
    /**
     * <code>optional .com.palantir.atlasdb.protos.generated.SchemaDependentTableMetadata schemaDependentTableMetadata = 2;</code>
     */
    com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadata getSchemaDependentTableMetadata();
    /**
     * <code>optional .com.palantir.atlasdb.protos.generated.SchemaDependentTableMetadata schemaDependentTableMetadata = 2;</code>
     */
    com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadataOrBuilder getSchemaDependentTableMetadataOrBuilder();
  }
  /**
   * Protobuf type {@code com.palantir.atlasdb.protos.generated.SchemaDependentTableMetadataEntry}
   */
  public static final class SchemaDependentTableMetadataEntry extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.palantir.atlasdb.protos.generated.SchemaDependentTableMetadataEntry)
      SchemaDependentTableMetadataEntryOrBuilder {
    // Use SchemaDependentTableMetadataEntry.newBuilder() to construct.
    private SchemaDependentTableMetadataEntry(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SchemaDependentTableMetadataEntry(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SchemaDependentTableMetadataEntry defaultInstance;
    public static SchemaDependentTableMetadataEntry getDefaultInstance() {
      return defaultInstance;
    }

    public SchemaDependentTableMetadataEntry getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SchemaDependentTableMetadataEntry(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.TableReference.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = tableReference_.toBuilder();
              }
              tableReference_ = input.readMessage(com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.TableReference.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tableReference_);
                tableReference_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadata.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = schemaDependentTableMetadata_.toBuilder();
              }
              schemaDependentTableMetadata_ = input.readMessage(com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadata.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(schemaDependentTableMetadata_);
                schemaDependentTableMetadata_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.internal_static_com_palantir_atlasdb_protos_generated_SchemaDependentTableMetadataEntry_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.internal_static_com_palantir_atlasdb_protos_generated_SchemaDependentTableMetadataEntry_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadataEntry.class, com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadataEntry.Builder.class);
    }

    public static com.google.protobuf.Parser<SchemaDependentTableMetadataEntry> PARSER =
        new com.google.protobuf.AbstractParser<SchemaDependentTableMetadataEntry>() {
      public SchemaDependentTableMetadataEntry parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SchemaDependentTableMetadataEntry(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SchemaDependentTableMetadataEntry> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int TABLEREFERENCE_FIELD_NUMBER = 1;
    private com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.TableReference tableReference_;
    /**
     * <code>optional .com.palantir.atlasdb.protos.generated.TableReference tableReference = 1;</code>
     */
    public boolean hasTableReference() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .com.palantir.atlasdb.protos.generated.TableReference tableReference = 1;</code>
     */
    public com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.TableReference getTableReference() {
      return tableReference_;
    }
    /**
     * <code>optional .com.palantir.atlasdb.protos.generated.TableReference tableReference = 1;</code>
     */
    public com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.TableReferenceOrBuilder getTableReferenceOrBuilder() {
      return tableReference_;
    }

    public static final int SCHEMADEPENDENTTABLEMETADATA_FIELD_NUMBER = 2;
    private com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadata schemaDependentTableMetadata_;
    /**
     * <code>optional .com.palantir.atlasdb.protos.generated.SchemaDependentTableMetadata schemaDependentTableMetadata = 2;</code>
     */
    public boolean hasSchemaDependentTableMetadata() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .com.palantir.atlasdb.protos.generated.SchemaDependentTableMetadata schemaDependentTableMetadata = 2;</code>
     */
    public com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadata getSchemaDependentTableMetadata() {
      return schemaDependentTableMetadata_;
    }
    /**
     * <code>optional .com.palantir.atlasdb.protos.generated.SchemaDependentTableMetadata schemaDependentTableMetadata = 2;</code>
     */
    public com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadataOrBuilder getSchemaDependentTableMetadataOrBuilder() {
      return schemaDependentTableMetadata_;
    }

    private void initFields() {
      tableReference_ = com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.TableReference.getDefaultInstance();
      schemaDependentTableMetadata_ = com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadata.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, tableReference_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, schemaDependentTableMetadata_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, tableReference_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, schemaDependentTableMetadata_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadataEntry parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadataEntry parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadataEntry parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadataEntry parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadataEntry parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadataEntry parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadataEntry parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadataEntry parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadataEntry parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadataEntry parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadataEntry prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.palantir.atlasdb.protos.generated.SchemaDependentTableMetadataEntry}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.palantir.atlasdb.protos.generated.SchemaDependentTableMetadataEntry)
        com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadataEntryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.internal_static_com_palantir_atlasdb_protos_generated_SchemaDependentTableMetadataEntry_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.internal_static_com_palantir_atlasdb_protos_generated_SchemaDependentTableMetadataEntry_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadataEntry.class, com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadataEntry.Builder.class);
      }

      // Construct using com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadataEntry.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getTableReferenceFieldBuilder();
          getSchemaDependentTableMetadataFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (tableReferenceBuilder_ == null) {
          tableReference_ = com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.TableReference.getDefaultInstance();
        } else {
          tableReferenceBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (schemaDependentTableMetadataBuilder_ == null) {
          schemaDependentTableMetadata_ = com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadata.getDefaultInstance();
        } else {
          schemaDependentTableMetadataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.internal_static_com_palantir_atlasdb_protos_generated_SchemaDependentTableMetadataEntry_descriptor;
      }

      public com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadataEntry getDefaultInstanceForType() {
        return com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadataEntry.getDefaultInstance();
      }

      public com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadataEntry build() {
        com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadataEntry result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadataEntry buildPartial() {
        com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadataEntry result = new com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadataEntry(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (tableReferenceBuilder_ == null) {
          result.tableReference_ = tableReference_;
        } else {
          result.tableReference_ = tableReferenceBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (schemaDependentTableMetadataBuilder_ == null) {
          result.schemaDependentTableMetadata_ = schemaDependentTableMetadata_;
        } else {
          result.schemaDependentTableMetadata_ = schemaDependentTableMetadataBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadataEntry) {
          return mergeFrom((com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadataEntry)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadataEntry other) {
        if (other == com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadataEntry.getDefaultInstance()) return this;
        if (other.hasTableReference()) {
          mergeTableReference(other.getTableReference());
        }
        if (other.hasSchemaDependentTableMetadata()) {
          mergeSchemaDependentTableMetadata(other.getSchemaDependentTableMetadata());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadataEntry parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadataEntry) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.TableReference tableReference_ = com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.TableReference.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.TableReference, com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.TableReference.Builder, com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.TableReferenceOrBuilder> tableReferenceBuilder_;
      /**
       * <code>optional .com.palantir.atlasdb.protos.generated.TableReference tableReference = 1;</code>
       */
      public boolean hasTableReference() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .com.palantir.atlasdb.protos.generated.TableReference tableReference = 1;</code>
       */
      public com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.TableReference getTableReference() {
        if (tableReferenceBuilder_ == null) {
          return tableReference_;
        } else {
          return tableReferenceBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.palantir.atlasdb.protos.generated.TableReference tableReference = 1;</code>
       */
      public Builder setTableReference(com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.TableReference value) {
        if (tableReferenceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tableReference_ = value;
          onChanged();
        } else {
          tableReferenceBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .com.palantir.atlasdb.protos.generated.TableReference tableReference = 1;</code>
       */
      public Builder setTableReference(
          com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.TableReference.Builder builderForValue) {
        if (tableReferenceBuilder_ == null) {
          tableReference_ = builderForValue.build();
          onChanged();
        } else {
          tableReferenceBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .com.palantir.atlasdb.protos.generated.TableReference tableReference = 1;</code>
       */
      public Builder mergeTableReference(com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.TableReference value) {
        if (tableReferenceBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              tableReference_ != com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.TableReference.getDefaultInstance()) {
            tableReference_ =
              com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.TableReference.newBuilder(tableReference_).mergeFrom(value).buildPartial();
          } else {
            tableReference_ = value;
          }
          onChanged();
        } else {
          tableReferenceBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .com.palantir.atlasdb.protos.generated.TableReference tableReference = 1;</code>
       */
      public Builder clearTableReference() {
        if (tableReferenceBuilder_ == null) {
          tableReference_ = com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.TableReference.getDefaultInstance();
          onChanged();
        } else {
          tableReferenceBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .com.palantir.atlasdb.protos.generated.TableReference tableReference = 1;</code>
       */
      public com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.TableReference.Builder getTableReferenceBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getTableReferenceFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.palantir.atlasdb.protos.generated.TableReference tableReference = 1;</code>
       */
      public com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.TableReferenceOrBuilder getTableReferenceOrBuilder() {
        if (tableReferenceBuilder_ != null) {
          return tableReferenceBuilder_.getMessageOrBuilder();
        } else {
          return tableReference_;
        }
      }
      /**
       * <code>optional .com.palantir.atlasdb.protos.generated.TableReference tableReference = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.TableReference, com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.TableReference.Builder, com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.TableReferenceOrBuilder> 
          getTableReferenceFieldBuilder() {
        if (tableReferenceBuilder_ == null) {
          tableReferenceBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.TableReference, com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.TableReference.Builder, com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.TableReferenceOrBuilder>(
                  getTableReference(),
                  getParentForChildren(),
                  isClean());
          tableReference_ = null;
        }
        return tableReferenceBuilder_;
      }

      private com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadata schemaDependentTableMetadata_ = com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadata.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadata, com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadata.Builder, com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadataOrBuilder> schemaDependentTableMetadataBuilder_;
      /**
       * <code>optional .com.palantir.atlasdb.protos.generated.SchemaDependentTableMetadata schemaDependentTableMetadata = 2;</code>
       */
      public boolean hasSchemaDependentTableMetadata() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .com.palantir.atlasdb.protos.generated.SchemaDependentTableMetadata schemaDependentTableMetadata = 2;</code>
       */
      public com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadata getSchemaDependentTableMetadata() {
        if (schemaDependentTableMetadataBuilder_ == null) {
          return schemaDependentTableMetadata_;
        } else {
          return schemaDependentTableMetadataBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.palantir.atlasdb.protos.generated.SchemaDependentTableMetadata schemaDependentTableMetadata = 2;</code>
       */
      public Builder setSchemaDependentTableMetadata(com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadata value) {
        if (schemaDependentTableMetadataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          schemaDependentTableMetadata_ = value;
          onChanged();
        } else {
          schemaDependentTableMetadataBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .com.palantir.atlasdb.protos.generated.SchemaDependentTableMetadata schemaDependentTableMetadata = 2;</code>
       */
      public Builder setSchemaDependentTableMetadata(
          com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadata.Builder builderForValue) {
        if (schemaDependentTableMetadataBuilder_ == null) {
          schemaDependentTableMetadata_ = builderForValue.build();
          onChanged();
        } else {
          schemaDependentTableMetadataBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .com.palantir.atlasdb.protos.generated.SchemaDependentTableMetadata schemaDependentTableMetadata = 2;</code>
       */
      public Builder mergeSchemaDependentTableMetadata(com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadata value) {
        if (schemaDependentTableMetadataBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              schemaDependentTableMetadata_ != com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadata.getDefaultInstance()) {
            schemaDependentTableMetadata_ =
              com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadata.newBuilder(schemaDependentTableMetadata_).mergeFrom(value).buildPartial();
          } else {
            schemaDependentTableMetadata_ = value;
          }
          onChanged();
        } else {
          schemaDependentTableMetadataBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .com.palantir.atlasdb.protos.generated.SchemaDependentTableMetadata schemaDependentTableMetadata = 2;</code>
       */
      public Builder clearSchemaDependentTableMetadata() {
        if (schemaDependentTableMetadataBuilder_ == null) {
          schemaDependentTableMetadata_ = com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadata.getDefaultInstance();
          onChanged();
        } else {
          schemaDependentTableMetadataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .com.palantir.atlasdb.protos.generated.SchemaDependentTableMetadata schemaDependentTableMetadata = 2;</code>
       */
      public com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadata.Builder getSchemaDependentTableMetadataBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getSchemaDependentTableMetadataFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.palantir.atlasdb.protos.generated.SchemaDependentTableMetadata schemaDependentTableMetadata = 2;</code>
       */
      public com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadataOrBuilder getSchemaDependentTableMetadataOrBuilder() {
        if (schemaDependentTableMetadataBuilder_ != null) {
          return schemaDependentTableMetadataBuilder_.getMessageOrBuilder();
        } else {
          return schemaDependentTableMetadata_;
        }
      }
      /**
       * <code>optional .com.palantir.atlasdb.protos.generated.SchemaDependentTableMetadata schemaDependentTableMetadata = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadata, com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadata.Builder, com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadataOrBuilder> 
          getSchemaDependentTableMetadataFieldBuilder() {
        if (schemaDependentTableMetadataBuilder_ == null) {
          schemaDependentTableMetadataBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadata, com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadata.Builder, com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadataOrBuilder>(
                  getSchemaDependentTableMetadata(),
                  getParentForChildren(),
                  isClean());
          schemaDependentTableMetadata_ = null;
        }
        return schemaDependentTableMetadataBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:com.palantir.atlasdb.protos.generated.SchemaDependentTableMetadataEntry)
    }

    static {
      defaultInstance = new SchemaDependentTableMetadataEntry(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.palantir.atlasdb.protos.generated.SchemaDependentTableMetadataEntry)
  }

  public interface SchemaDependentTableMetadataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.palantir.atlasdb.protos.generated.SchemaDependentTableMetadata)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .com.palantir.atlasdb.protos.generated.CleanupRequirement cleanupRequirement = 1;</code>
     */
    boolean hasCleanupRequirement();
    /**
     * <code>optional .com.palantir.atlasdb.protos.generated.CleanupRequirement cleanupRequirement = 1;</code>
     */
    com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.CleanupRequirement getCleanupRequirement();
  }
  /**
   * Protobuf type {@code com.palantir.atlasdb.protos.generated.SchemaDependentTableMetadata}
   */
  public static final class SchemaDependentTableMetadata extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.palantir.atlasdb.protos.generated.SchemaDependentTableMetadata)
      SchemaDependentTableMetadataOrBuilder {
    // Use SchemaDependentTableMetadata.newBuilder() to construct.
    private SchemaDependentTableMetadata(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SchemaDependentTableMetadata(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SchemaDependentTableMetadata defaultInstance;
    public static SchemaDependentTableMetadata getDefaultInstance() {
      return defaultInstance;
    }

    public SchemaDependentTableMetadata getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SchemaDependentTableMetadata(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.CleanupRequirement value = com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.CleanupRequirement.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                cleanupRequirement_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.internal_static_com_palantir_atlasdb_protos_generated_SchemaDependentTableMetadata_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.internal_static_com_palantir_atlasdb_protos_generated_SchemaDependentTableMetadata_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadata.class, com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadata.Builder.class);
    }

    public static com.google.protobuf.Parser<SchemaDependentTableMetadata> PARSER =
        new com.google.protobuf.AbstractParser<SchemaDependentTableMetadata>() {
      public SchemaDependentTableMetadata parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SchemaDependentTableMetadata(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SchemaDependentTableMetadata> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int CLEANUPREQUIREMENT_FIELD_NUMBER = 1;
    private com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.CleanupRequirement cleanupRequirement_;
    /**
     * <code>optional .com.palantir.atlasdb.protos.generated.CleanupRequirement cleanupRequirement = 1;</code>
     */
    public boolean hasCleanupRequirement() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .com.palantir.atlasdb.protos.generated.CleanupRequirement cleanupRequirement = 1;</code>
     */
    public com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.CleanupRequirement getCleanupRequirement() {
      return cleanupRequirement_;
    }

    private void initFields() {
      cleanupRequirement_ = com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.CleanupRequirement.NOT_NEEDED;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, cleanupRequirement_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, cleanupRequirement_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadata parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadata parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadata parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadata parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadata parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadata parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadata parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadata parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadata parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadata parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadata prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.palantir.atlasdb.protos.generated.SchemaDependentTableMetadata}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.palantir.atlasdb.protos.generated.SchemaDependentTableMetadata)
        com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.internal_static_com_palantir_atlasdb_protos_generated_SchemaDependentTableMetadata_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.internal_static_com_palantir_atlasdb_protos_generated_SchemaDependentTableMetadata_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadata.class, com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadata.Builder.class);
      }

      // Construct using com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadata.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        cleanupRequirement_ = com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.CleanupRequirement.NOT_NEEDED;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.internal_static_com_palantir_atlasdb_protos_generated_SchemaDependentTableMetadata_descriptor;
      }

      public com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadata getDefaultInstanceForType() {
        return com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadata.getDefaultInstance();
      }

      public com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadata build() {
        com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadata result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadata buildPartial() {
        com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadata result = new com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadata(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.cleanupRequirement_ = cleanupRequirement_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadata) {
          return mergeFrom((com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadata)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadata other) {
        if (other == com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadata.getDefaultInstance()) return this;
        if (other.hasCleanupRequirement()) {
          setCleanupRequirement(other.getCleanupRequirement());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadata parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.SchemaDependentTableMetadata) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.CleanupRequirement cleanupRequirement_ = com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.CleanupRequirement.NOT_NEEDED;
      /**
       * <code>optional .com.palantir.atlasdb.protos.generated.CleanupRequirement cleanupRequirement = 1;</code>
       */
      public boolean hasCleanupRequirement() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .com.palantir.atlasdb.protos.generated.CleanupRequirement cleanupRequirement = 1;</code>
       */
      public com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.CleanupRequirement getCleanupRequirement() {
        return cleanupRequirement_;
      }
      /**
       * <code>optional .com.palantir.atlasdb.protos.generated.CleanupRequirement cleanupRequirement = 1;</code>
       */
      public Builder setCleanupRequirement(com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.CleanupRequirement value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        cleanupRequirement_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .com.palantir.atlasdb.protos.generated.CleanupRequirement cleanupRequirement = 1;</code>
       */
      public Builder clearCleanupRequirement() {
        bitField0_ = (bitField0_ & ~0x00000001);
        cleanupRequirement_ = com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.CleanupRequirement.NOT_NEEDED;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.palantir.atlasdb.protos.generated.SchemaDependentTableMetadata)
    }

    static {
      defaultInstance = new SchemaDependentTableMetadata(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.palantir.atlasdb.protos.generated.SchemaDependentTableMetadata)
  }

  public interface TableReferenceOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.palantir.atlasdb.protos.generated.TableReference)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string namespace = 1;</code>
     */
    boolean hasNamespace();
    /**
     * <code>optional string namespace = 1;</code>
     */
    java.lang.String getNamespace();
    /**
     * <code>optional string namespace = 1;</code>
     */
    com.google.protobuf.ByteString
        getNamespaceBytes();

    /**
     * <code>optional string tableName = 2;</code>
     */
    boolean hasTableName();
    /**
     * <code>optional string tableName = 2;</code>
     */
    java.lang.String getTableName();
    /**
     * <code>optional string tableName = 2;</code>
     */
    com.google.protobuf.ByteString
        getTableNameBytes();
  }
  /**
   * Protobuf type {@code com.palantir.atlasdb.protos.generated.TableReference}
   */
  public static final class TableReference extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.palantir.atlasdb.protos.generated.TableReference)
      TableReferenceOrBuilder {
    // Use TableReference.newBuilder() to construct.
    private TableReference(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TableReference(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TableReference defaultInstance;
    public static TableReference getDefaultInstance() {
      return defaultInstance;
    }

    public TableReference getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TableReference(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              namespace_ = bs;
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              tableName_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.internal_static_com_palantir_atlasdb_protos_generated_TableReference_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.internal_static_com_palantir_atlasdb_protos_generated_TableReference_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.TableReference.class, com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.TableReference.Builder.class);
    }

    public static com.google.protobuf.Parser<TableReference> PARSER =
        new com.google.protobuf.AbstractParser<TableReference>() {
      public TableReference parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TableReference(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TableReference> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int NAMESPACE_FIELD_NUMBER = 1;
    private java.lang.Object namespace_;
    /**
     * <code>optional string namespace = 1;</code>
     */
    public boolean hasNamespace() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string namespace = 1;</code>
     */
    public java.lang.String getNamespace() {
      java.lang.Object ref = namespace_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          namespace_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string namespace = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNamespaceBytes() {
      java.lang.Object ref = namespace_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        namespace_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TABLENAME_FIELD_NUMBER = 2;
    private java.lang.Object tableName_;
    /**
     * <code>optional string tableName = 2;</code>
     */
    public boolean hasTableName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string tableName = 2;</code>
     */
    public java.lang.String getTableName() {
      java.lang.Object ref = tableName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          tableName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string tableName = 2;</code>
     */
    public com.google.protobuf.ByteString
        getTableNameBytes() {
      java.lang.Object ref = tableName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        tableName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      namespace_ = "";
      tableName_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getNamespaceBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getTableNameBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getNamespaceBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getTableNameBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.TableReference parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.TableReference parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.TableReference parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.TableReference parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.TableReference parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.TableReference parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.TableReference parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.TableReference parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.TableReference parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.TableReference parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.TableReference prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.palantir.atlasdb.protos.generated.TableReference}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.palantir.atlasdb.protos.generated.TableReference)
        com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.TableReferenceOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.internal_static_com_palantir_atlasdb_protos_generated_TableReference_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.internal_static_com_palantir_atlasdb_protos_generated_TableReference_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.TableReference.class, com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.TableReference.Builder.class);
      }

      // Construct using com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.TableReference.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        namespace_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        tableName_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.internal_static_com_palantir_atlasdb_protos_generated_TableReference_descriptor;
      }

      public com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.TableReference getDefaultInstanceForType() {
        return com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.TableReference.getDefaultInstance();
      }

      public com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.TableReference build() {
        com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.TableReference result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.TableReference buildPartial() {
        com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.TableReference result = new com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.TableReference(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.namespace_ = namespace_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.tableName_ = tableName_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.TableReference) {
          return mergeFrom((com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.TableReference)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.TableReference other) {
        if (other == com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.TableReference.getDefaultInstance()) return this;
        if (other.hasNamespace()) {
          bitField0_ |= 0x00000001;
          namespace_ = other.namespace_;
          onChanged();
        }
        if (other.hasTableName()) {
          bitField0_ |= 0x00000002;
          tableName_ = other.tableName_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.TableReference parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.palantir.atlasdb.protos.generated.SchemaMetadataPersistence.TableReference) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object namespace_ = "";
      /**
       * <code>optional string namespace = 1;</code>
       */
      public boolean hasNamespace() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string namespace = 1;</code>
       */
      public java.lang.String getNamespace() {
        java.lang.Object ref = namespace_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            namespace_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string namespace = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNamespaceBytes() {
        java.lang.Object ref = namespace_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          namespace_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string namespace = 1;</code>
       */
      public Builder setNamespace(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        namespace_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string namespace = 1;</code>
       */
      public Builder clearNamespace() {
        bitField0_ = (bitField0_ & ~0x00000001);
        namespace_ = getDefaultInstance().getNamespace();
        onChanged();
        return this;
      }
      /**
       * <code>optional string namespace = 1;</code>
       */
      public Builder setNamespaceBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        namespace_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object tableName_ = "";
      /**
       * <code>optional string tableName = 2;</code>
       */
      public boolean hasTableName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string tableName = 2;</code>
       */
      public java.lang.String getTableName() {
        java.lang.Object ref = tableName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            tableName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string tableName = 2;</code>
       */
      public com.google.protobuf.ByteString
          getTableNameBytes() {
        java.lang.Object ref = tableName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          tableName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string tableName = 2;</code>
       */
      public Builder setTableName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        tableName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string tableName = 2;</code>
       */
      public Builder clearTableName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        tableName_ = getDefaultInstance().getTableName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string tableName = 2;</code>
       */
      public Builder setTableNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        tableName_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.palantir.atlasdb.protos.generated.TableReference)
    }

    static {
      defaultInstance = new TableReference(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.palantir.atlasdb.protos.generated.TableReference)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_palantir_atlasdb_protos_generated_SchemaMetadata_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_palantir_atlasdb_protos_generated_SchemaMetadata_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_palantir_atlasdb_protos_generated_SchemaDependentTableMetadataEntry_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_palantir_atlasdb_protos_generated_SchemaDependentTableMetadataEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_palantir_atlasdb_protos_generated_SchemaDependentTableMetadata_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_palantir_atlasdb_protos_generated_SchemaDependentTableMetadata_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_palantir_atlasdb_protos_generated_TableReference_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_palantir_atlasdb_protos_generated_TableReference_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\nFmain/proto/com/palantir/atlasdb/protos" +
      "/SchemaMetadataPersistence.proto\022%com.pa" +
      "lantir.atlasdb.protos.generated\"q\n\016Schem" +
      "aMetadata\022_\n\rtableMetadata\030\001 \003(\0132H.com.p" +
      "alantir.atlasdb.protos.generated.SchemaD" +
      "ependentTableMetadataEntry\"\335\001\n!SchemaDep" +
      "endentTableMetadataEntry\022M\n\016tableReferen" +
      "ce\030\001 \001(\01325.com.palantir.atlasdb.protos.g" +
      "enerated.TableReference\022i\n\034schemaDepende" +
      "ntTableMetadata\030\002 \001(\0132C.com.palantir.atl",
      "asdb.protos.generated.SchemaDependentTab" +
      "leMetadata\"u\n\034SchemaDependentTableMetada" +
      "ta\022U\n\022cleanupRequirement\030\001 \001(\01629.com.pal" +
      "antir.atlasdb.protos.generated.CleanupRe" +
      "quirement\"6\n\016TableReference\022\021\n\tnamespace" +
      "\030\001 \001(\t\022\021\n\ttableName\030\002 \001(\t*9\n\022CleanupRequ" +
      "irement\022\016\n\nNOT_NEEDED\020\000\022\023\n\017ARBITRARY_ASY" +
      "NC\020@"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_com_palantir_atlasdb_protos_generated_SchemaMetadata_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_com_palantir_atlasdb_protos_generated_SchemaMetadata_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_palantir_atlasdb_protos_generated_SchemaMetadata_descriptor,
        new java.lang.String[] { "TableMetadata", });
    internal_static_com_palantir_atlasdb_protos_generated_SchemaDependentTableMetadataEntry_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_com_palantir_atlasdb_protos_generated_SchemaDependentTableMetadataEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_palantir_atlasdb_protos_generated_SchemaDependentTableMetadataEntry_descriptor,
        new java.lang.String[] { "TableReference", "SchemaDependentTableMetadata", });
    internal_static_com_palantir_atlasdb_protos_generated_SchemaDependentTableMetadata_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_com_palantir_atlasdb_protos_generated_SchemaDependentTableMetadata_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_palantir_atlasdb_protos_generated_SchemaDependentTableMetadata_descriptor,
        new java.lang.String[] { "CleanupRequirement", });
    internal_static_com_palantir_atlasdb_protos_generated_TableReference_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_com_palantir_atlasdb_protos_generated_TableReference_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_palantir_atlasdb_protos_generated_TableReference_descriptor,
        new java.lang.String[] { "Namespace", "TableName", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
