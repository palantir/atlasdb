services:
  TimeLockManagementService:
    name: TimeLock Management Service
    default-auth: header
    package: com.palantir.atlasdb.timelock.api.management
    base-path: /tl/management
    endpoints:
      getNamespaces:
        http: POST /getNamespaces
        returns: set<string>
        docs: |
          The endpoint loads all persisted namespaces. ``leaderPaxos`` is filtered out from the set
          as it is not a namespace.

      achieveConsensus:
        http: POST /achieveConsensus
        args:
          namespaces: set<string>
        docs: |
          The operation of achieving consensus on all namespaces is NOT atomic. In the case of failures, it can
          be assumed that consensus was achieved on some namespaces.

      invalidateResources:
        http: POST /invalidateResources
        args:
          namespaces: set<string>
        docs: |
          Invalidates existing resources for a given TimeLock namespace. Does not actually cause a leader election, and
          should not interrupt service for other naemspaces. Note that this operation is atomic for each namespace (e.g.
          users will not see two different lock services servicing the same startTransactions request), but not atomic
          as a whole.

      forceKillTimeLockServer:
        http: POST /forceKillTimeLockServer
        docs: |
          Kills TimeLock server i.e. current server will not be able to talk to peer nodes or serve requests. After
          hitting this endpoint, the server will require external intervention to start up the service again.
