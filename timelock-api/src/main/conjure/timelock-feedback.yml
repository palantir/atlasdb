types:
  imports:
    Duration:
      base-type: any
      external:
        java: java.time.Duration

  definitions:
    default-package: com.palantir.timelock.feedback
    objects:
      ConjureTimeLockClientFeedback:
        fields:
          atlasVersion:
            type: string
            safety: safe
          serviceName:
            type: string
            safety: safe
          nodeId:
            type: uuid
            safety: safe
          startTransaction: optional<EndpointStatistics>
          leaderTime: optional<EndpointStatistics>
          namespace:
            type: optional<string>
            safety: safe
            docs: The namespace the client uses to make timestamp/lock requests
      EndpointStatistics:
        fields:
          p99:
            type: double
            safety: safe
          oneMin:
            type: double
            safety: safe
          errorRate:
            type: optional<double>
            safety: safe
      LeaderElectionDuration:
        fields:
          oldLeader:
            type: uuid
            safety: safe
          newLeader:
            type: uuid
            safety: safe
          duration: Duration
      LeaderElectionStatistics:
        fields:
          p99:
            type: double
            safety: safe
          p95:
            type: double
            safety: safe
          mean:
            type: double
            safety: safe
          count:
            type: safelong
            safety: safe
          durationEstimate: optional<LeaderElectionDuration>

services:
  TimeLockClientFeedbackService:
    name: TimeLock Client Feedback Service
    default-auth: header
    package: com.palantir.atlasdb.timelock.adjudicate.feedback
    base-path: /tl/feedback
    endpoints:
      reportFeedback:
        http: POST /reportFeedback
        args:
          feedback: ConjureTimeLockClientFeedback
        docs: |
          The endpoint receives feedback reports from clients which are required for TimeLock Adjudication.
      reportLeaderMetrics:
        http: POST /reportLeaderMetrics
        args:
          statistics: LeaderElectionStatistics
        docs: |
          This endpoint recieves stats about Timelock leader election durations from all clients, then aggregates them
          on the server side.

