types:
  imports:
    LeaderTime:
      base-type: any
      external:
        java: com.palantir.lock.v2.LeaderTime
    NanoTime:
      base-type: safelong
      external:
        java: com.palantir.common.time.NanoTime
    PartitionedTimestamps:
      base-type: any
      external:
        java: com.palantir.lock.v2.PartitionedTimestamps
    LockImmutableTimestampResponse:
      base-type: any
      external:
        java: com.palantir.lock.v2.LockImmutableTimestampResponse
    Lease:
      base-type: any
      external:
        java: com.palantir.lock.v2.Lease
    Long:
      base-type: any
      external:
        java: java.lang.Long
    LockWatchStateUpdate:
      base-type: any
      external:
        java: com.palantir.lock.watch.LockWatchStateUpdate
  definitions:
    default-package: com.palantir.atlasdb.timelock.api
    objects:
      ConjureStartTransactionsRequest:
        fields:
          requestId: uuid
          requestorId: uuid
          numTransactions: integer
          lastKnownVersion: optional<Long>
      ConjureStartTransactionsResponse:
        fields:
          immutableTimestamp: LockImmutableTimestampResponse
          timestamps: PartitionedTimestamps
          lease: Lease
          lockWatchUpdate: LockWatchStateUpdate

services:
  ConjureTimelockService:
    name: Timelock service
    default-auth: header
    package: com.palantir.atlasdb.timelock.api
    base-path: /tl
    endpoints:
      startTransactions:
        http: POST /st/{namespace}
        args:
          namespace: string
          request: ConjureStartTransactionsRequest
        returns: ConjureStartTransactionsResponse
      leaderTime:
        http: POST /lt/{namespace}
        args:
          namespace: string
        returns: LeaderTime