apply plugin: 'com.palantir.sls-recommended-dependencies'
apply from: "../gradle/shared.gradle"

libsDirName = file('build/artifacts')

dependencies {
    api project(":timestamp-api")
    api project(":timestamp-client")
    implementation project(":atlasdb-commons")
    implementation 'javax.ws.rs:javax.ws.rs-api'
    implementation 'com.fasterxml.jackson.core:jackson-annotations'
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'com.palantir.safe-logging:safe-logging'
    implementation 'com.palantir.safe-logging:preconditions'
    implementation 'com.palantir.tritium:tritium-ids'

    implementation 'com.google.errorprone:error_prone_annotations'
    implementation 'com.google.guava:guava'
    implementation project(':commons-annotations')

    testImplementation 'com.fasterxml.jackson.datatype:jackson-datatype-guava'
    testImplementation 'com.fasterxml.jackson.datatype:jackson-datatype-jdk8'
    testImplementation 'com.palantir.conjure.java.runtime:conjure-java-jackson-serialization'
    testImplementation 'com.palantir.common:streams'
    testImplementation 'com.palantir.safe-logging:preconditions-assertj'
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation project(':atlasdb-api')
    testAnnotationProcessor 'org.immutables:value'
    testCompileOnly 'org.immutables:value::annotations'

    annotationProcessor 'org.immutables:value'
    compileOnly 'org.immutables:value::annotations'
    annotationProcessor project(":atlasdb-processors")
    compileOnly project(":atlasdb-processors")

    testImplementation 'junit:junit'
    testRuntimeOnly("org.junit.vintage:junit-vintage-engine") {
        because 'allows JUnit 3 and JUnit 4 tests to run'
    }
}

recommendedProductDependencies {
    productDependency {
        productGroup = 'com.palantir.timelock'
        productName = 'timelock-server'
        minimumVersion = '0.1295.0'
        maximumVersion = '0.x.x'
    }
}
