apply from: "../gradle/shared.gradle"

versionsLock {
    testProject()
}

dependencies {
    implementation project(':atlasdb-api')
    implementation project(':atlasdb-client')
    implementation project(':atlasdb-commons')
    implementation project(":atlasdb-dbkvs")
    implementation project(":atlasdb-tests-shared")

    implementation 'com.google.guava:guava'
    implementation 'org.assertj:assertj-core'
    implementation 'org.junit.jupiter:junit-jupiter'
    implementation 'org.junit.jupiter:junit-jupiter-api'

    testImplementation project(':atlasdb-api')
    testImplementation project(':atlasdb-client')
    testImplementation project(':atlasdb-config')
    testImplementation project(':atlasdb-dbkvs-hikari')
    testImplementation project(':commons-db')
    testImplementation project(':timestamp-api')

    testImplementation 'com.google.guava:guava'
    testImplementation 'org.apache.commons:commons-lang3'
    testImplementation 'com.palantir.conjure.java.api:service-config'
    testImplementation 'com.palantir.refreshable:refreshable'
    testImplementation 'com.palantir.safe-logging:preconditions'
    testImplementation 'com.palantir.safe-logging:safe-logging'
    testImplementation 'joda-time:joda-time'
    testImplementation 'org.xerial:sqlite-jdbc'
    testImplementation 'org.awaitility:awaitility'
    testImplementation 'org.mockito:mockito-core'
    testImplementation 'org.mockito:mockito-junit-jupiter'
    testImplementation 'com.palantir.docker.compose:docker-compose-junit-jupiter'

    testAnnotationProcessor 'org.immutables:value'
    testCompileOnly 'org.immutables:value::annotations'
}

task postgresTest(type: Test) {
    maxHeapSize = "1024m"
    include '**/postgres/'
    include '**/HikariCpConnectionManagerTest.class'
    maxParallelForks 2
}

task oracleTest(type: Test) {
    maxHeapSize = "1024m"
    include '**/oracle/'
    maxParallelForks 2
}

test {
    // Tests should be included with the relevant flavoured task.
    exclude '**/*.class'
}

tasks.withType(Test).configureEach {
    useJUnitPlatform()
}
