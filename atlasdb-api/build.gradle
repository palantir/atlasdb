apply from: "../gradle/publish-jars.gradle"
apply plugin: 'org.inferred.processors'

apply from: "../gradle/shared.gradle"

dependencies {
  compile project(":atlasdb-commons")
  compile project(":lock-api")
  compile project(":timestamp-api")
  compile group: 'org.apache.commons', name: 'commons-lang3'
  compile group: 'com.fasterxml.jackson.core', name: 'jackson-annotations'
  compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind'
  compile group: 'javax.annotation', name: 'javax.annotation-api'
  compile group: 'javax.validation', name: 'validation-api'

  compile group: 'com.palantir.conjure.java.api', name: 'ssl-config'
  compile group: 'com.palantir.conjure.java.runtime', name: 'conjure-java-jaxrs-client'
  compile (group: 'com.palantir.tritium', name: 'tritium-registry') {
    exclude (group: 'io.dropwizard.metrics', module: 'metrics-core')
    exclude (group: 'org.hdrhistogram', module: 'HdrHistogram')
  }

  processor group: 'org.immutables', name: 'value'
  processor project(":atlasdb-processors")

  testCompile group: 'junit', name: 'junit'
  testCompile group: 'org.assertj', name: 'assertj-core'

  testCompile group: 'org.hamcrest', name: 'hamcrest-core'
  testCompile group: 'org.hamcrest', name: 'hamcrest-library'
}

task versionInfo {
  doLast {
    def metaInf = new File("${sourceSets.main.output.classesDir}/META-INF")
    if (metaInf.mkdir()) {
      def versionfile = new File(metaInf, "atlasdb.version")
      versionfile.text = project.version
    } else {
      println "Unable to create directory: ${metaInf}"
    }
  }
}
compileJava.finalizedBy versionInfo
