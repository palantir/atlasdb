apply from: "../gradle/shared.gradle"

schemas = [
    'com.palantir.atlasdb.schema.CompactSchema',
    'com.palantir.atlasdb.schema.SweepSchema',
    'com.palantir.atlasdb.schema.TargetedSweepSchema',
    'com.palantir.atlasdb.table.description.ApiTestSchema',
    'com.palantir.atlasdb.table.description.GenericTestSchema'
]

sourceSets {
  integrationInput
}

idea {
  module {
    sourceDirs += sourceSets.integrationInput.java.srcDirs
  }
}

libsDirName = file('build/artifacts')

task clientTestJar(type: Jar) {
    from sourceSets.test.output
    classifier = 'tests'
}

configurations {
    testArtifacts
}

artifacts {
  testArtifacts clientTestJar
}

dependencies {
  api 'com.google.code.findbugs:jsr305'
  api 'com.google.guava:guava'
  api 'com.google.protobuf:protobuf-java'
  api 'javax.annotation:javax.annotation-api'
  api 'org.slf4j:slf4j-api'
  api project(':atlasdb-api')
  api project(':atlasdb-client-protobufs')
  api project(':atlasdb-commons')

  implementation 'com.fasterxml.jackson.core:jackson-annotations'
  implementation 'com.fasterxml.jackson.core:jackson-core'
  implementation 'com.fasterxml.jackson.core:jackson-databind'
  implementation 'com.fasterxml.jackson.datatype:jackson-datatype-guava'
  implementation 'com.github.ben-manes.caffeine:caffeine'
  implementation 'com.github.rholder:guava-retrying'
  implementation 'com.google.errorprone:error_prone_annotations'
  implementation 'com.google.guava:guava'
  implementation 'com.googlecode.protobuf-java-format:protobuf-java-format'
  implementation 'com.palantir.common:streams'
  implementation 'com.palantir.conjure.java:conjure-lib'
  implementation 'com.palantir.goethe:goethe'
  implementation 'com.palantir.nylon:nylon-threads'
  implementation 'com.palantir.refreshable:refreshable'
  implementation 'com.palantir.safe-logging:preconditions'
  implementation 'com.palantir.safe-logging:safe-logging'
  implementation 'com.palantir.tracing:tracing'
  implementation 'com.palantir.tracing:tracing-api'
  implementation 'com.palantir.tritium:tritium-api'
  implementation 'com.palantir.tritium:tritium-core'
  implementation 'com.palantir.tritium:tritium-ids'
  implementation 'com.palantir.tritium:tritium-slf4j'
  implementation 'com.squareup:javapoet'
  implementation 'io.dropwizard.metrics:metrics-core'
  implementation 'org.apache.commons:commons-lang3'
  implementation 'org.hdrhistogram:HdrHistogram'
  implementation 'org.xerial.snappy:snappy-java'
  implementation project(':atlasdb-autobatch')
  implementation project(':commons-annotations')
  implementation project(':commons-executors')
  implementation project(':lock-api-objects')
  implementation project(':timestamp-api')
  implementation ('com.palantir.tritium:tritium-caffeine') {
    exclude (group: 'io.dropwizard.metrics', module: 'metrics-core')
    exclude (group: 'org.hdrhistogram', module: 'HdrHistogram')
  }
  implementation ('com.palantir.tritium:tritium-registry') {
    exclude (group: 'io.dropwizard.metrics', module: 'metrics-core')
    exclude (group: 'org.hdrhistogram', module: 'HdrHistogram')
  }
  implementation ('com.palantir.tritium:tritium-metrics') {
    exclude (group: 'io.dropwizard.metrics', module: 'metrics-core')
    exclude (group: 'org.hdrhistogram', module: 'HdrHistogram')
  }
  implementation ('com.palantir.tritium:tritium-lib') {
    exclude (group: 'io.dropwizard.metrics', module: 'metrics-core')
    exclude (group: 'org.hdrhistogram', module: 'HdrHistogram')
  }

  testImplementation sourceSets.integrationInput.output
  testImplementation 'ch.qos.logback:logback-core'
  testImplementation 'com.google.guava:guava'
  testImplementation 'com.palantir.safe-logging:preconditions'
  testImplementation 'com.palantir.tracing:tracing-api'
  testImplementation 'com.palantir.tritium:tritium-api'
  testImplementation 'io.dropwizard.metrics:metrics-core'
  testImplementation 'org.apache.commons:commons-lang3'
  testImplementation 'org.slf4j:slf4j-api'
  testImplementation project(':commons-annotations')
  testImplementation project(':lock-api-objects')
  testImplementation project(':timestamp-api')


  testImplementation 'junit:junit'
  testImplementation 'org.mockito:mockito-core'
  testImplementation('org.jmock:jmock') {
    exclude group: 'org.hamcrest'
  }
  testImplementation 'ch.qos.logback:logback-classic'
  testImplementation 'org.assertj:assertj-core'
  testImplementation 'org.awaitility:awaitility'

  integrationInputImplementation project(':atlasdb-client')
  integrationInputImplementation 'com.fasterxml.jackson.core:jackson-annotations'
  integrationInputImplementation 'com.fasterxml.jackson.core:jackson-databind'
  integrationInputImplementation 'com.google.code.findbugs:findbugs-annotations'
  integrationInputImplementation 'com.google.errorprone:error_prone_annotations'
  integrationInputImplementation 'com.google.guava:guava'
  integrationInputImplementation 'com.google.protobuf:protobuf-java'
  integrationInputImplementation project(':atlasdb-api')
  integrationInputImplementation project(':atlasdb-commons')

  integrationInputAnnotationProcessor 'org.immutables:value'
  integrationInputCompileOnly 'org.immutables:value::annotations'

  annotationProcessor 'org.immutables:value'
  compileOnly 'org.immutables:value::annotations'
  testCompileOnly 'org.immutables:value::annotations'
}
