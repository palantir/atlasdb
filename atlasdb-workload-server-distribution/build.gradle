apply plugin: 'com.palantir.sls-java-service-distribution'
apply plugin: 'com.palantir.external-publish-dist'
apply from: "../gradle/shared.gradle"
apply from: "../gradle/docker.gradle"
apply from: "../gradle/non-client-dist.gradle"

dependencies {
    implementation 'com.fasterxml.jackson.core:jackson-annotations'
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jdk8'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    implementation 'io.dropwizard.metrics:metrics-core'
    implementation 'io.dropwizard:dropwizard-core'
    implementation 'io.dropwizard:dropwizard-jackson'
    implementation 'io.dropwizard:dropwizard-lifecycle'
    implementation 'com.palantir.conjure.java.api:service-config'
    implementation 'com.palantir.conjure.java.runtime:conjure-java-jackson-serialization'
    implementation 'com.palantir.refreshable:refreshable'
    implementation 'com.palantir.safe-logging:preconditions'
    implementation 'com.palantir.tritium:tritium-registry'
    implementation 'com.google.errorprone:error_prone_annotations'
    implementation 'com.google.guava:guava'

    implementation project(':atlasdb-api')
    implementation project(':atlasdb-buggify')
    implementation project(':atlasdb-client')
    implementation project(':atlasdb-workload-server')
    implementation project(':atlasdb-workload-server-api')
    implementation project(':atlasdb-config')

    runtimeOnly project(':atlasdb-cassandra')

    compileOnly 'org.immutables:value::annotations'
    annotationProcessor 'org.immutables:value'

    testImplementation 'org.assertj:assertj-core'
    testImplementation 'io.dropwizard:dropwizard-testing'
}


distribution {
    serviceName "atlasdb-workload-server"
    mainClass 'com.palantir.atlasdb.workload.WorkloadServerLauncher'
    args 'server', 'var/conf/workload-server.yml'
    defaultJvmOpts "-Xms512m", "-Xmx512m", "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005"
}
