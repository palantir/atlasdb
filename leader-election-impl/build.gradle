apply from: "../gradle/shared.gradle"
apply plugin: 'com.palantir.metric-schema'

license {
  exclude '**/LeaderElectionServiceMetrics.java'
}

dependencies {
  api project(":leader-election-api")
  implementation project(":atlasdb-autobatch")
  implementation project(":atlasdb-commons")

  implementation 'com.github.ben-manes.caffeine:caffeine'
  implementation 'com.google.protobuf:protobuf-java'
  implementation 'com.palantir.safe-logging:safe-logging'
  implementation 'com.palantir.sls.versions:sls-versions'
  implementation 'com.zaxxer:HikariCP'
  implementation 'commons-io:commons-io'
  implementation 'org.jdbi:jdbi3-core'
  implementation 'org.jdbi:jdbi3-sqlobject'
  implementation 'org.xerial:sqlite-jdbc'

  implementation 'com.palantir.common:streams'
  implementation 'com.fasterxml.jackson.core:jackson-annotations'
  implementation 'com.fasterxml.jackson.core:jackson-databind'
  implementation 'com.google.guava:guava'
  implementation 'com.palantir.tracing:tracing'
  implementation 'io.dropwizard.metrics:metrics-core'
  implementation 'org.apache.commons:commons-lang3'
  implementation 'org.slf4j:slf4j-api'
  implementation project(':commons-annotations')
  implementation project(':commons-executors')
  implementation project(':leader-election-api-protobufs')

  testImplementation 'com.google.guava:guava'
  testImplementation 'io.dropwizard.metrics:metrics-core'
  testImplementation 'com.palantir.safe-logging:preconditions-assertj'
  testImplementation project(':commons-executors')
  testImplementation project(':leader-election-api-protobufs')
  testImplementation project(':atlasdb-tests-shared')

  annotationProcessor 'org.immutables:value'
  compileOnly 'org.immutables:value::annotations'
  testCompileOnly 'org.immutables:value::annotations'
  annotationProcessor 'org.derive4j:derive4j'
  compileOnly 'org.derive4j:derive4j-annotation'

  testImplementation('org.jmock:jmock') {
    exclude group: 'org.hamcrest'
    exclude group: 'org.ow2.asm'
  }
  testImplementation 'org.assertj:assertj-core'
  testImplementation 'org.awaitility:awaitility'
  testImplementation 'org.mockito:mockito-core'
  testImplementation 'com.palantir.tracing:tracing-test-utils'
  testImplementation 'org.junit.jupiter:junit-jupiter'
  testImplementation 'org.mockito:mockito-junit-jupiter'

  testImplementation 'junit:junit'
  testRuntimeOnly("org.junit.vintage:junit-vintage-engine") {
    because 'allows JUnit 3 and JUnit 4 tests to run'
  }
}

configurations {
    testArtifacts {
       extendsFrom testRuntimeOnly
    }
}

artifacts {
    testArtifacts testJarForPublishing
}
