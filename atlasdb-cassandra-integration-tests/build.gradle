apply from: "../gradle/shared.gradle"

versionsLock {
    testProject()
}

dependencies {
    testImplementation 'com.google.guava:guava'
    testImplementation 'com.palantir.common:streams'
    testImplementation 'com.palantir.safe-logging:safe-logging'
    testImplementation 'org.apache.commons:commons-lang3'
    testImplementation 'org.apache.thrift:libthrift'
    testImplementation 'org.assertj:assertj-core'
    testImplementation 'org.awaitility:awaitility'
    testImplementation 'org.slf4j:slf4j-api'
    testImplementation 'org.apache.commons:commons-pool2'
    testImplementation 'org.mockito:mockito-core'
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testImplementation 'org.mockito:mockito-junit-jupiter'

    testImplementation project(':atlasdb-api')
    testImplementation project(":atlasdb-cassandra")
    testImplementation project(":atlasdb-cli")
    testImplementation project(':atlasdb-client')
    testImplementation project(':atlasdb-client-protobufs')
    testImplementation project(':atlasdb-commons')
    testImplementation project(":atlasdb-container-test-utils")
    testImplementation project(":atlasdb-ete-test-utils")
    testImplementation project(':atlasdb-impl-shared')
    testImplementation project(":atlasdb-tests-shared")
    testImplementation project(':flake-extension')
    testImplementation project(":timelock-impl")
    testImplementation project(':timestamp-api')
    testImplementation project(':commons-executors')

    testImplementation('com.palantir.cassandra:cassandra-all') {
        exclude module: 'junit'
        exclude group: 'org.apache.httpcomponents'
    }
    testImplementation ('com.palantir.cassandra:cassandra-thrift') {
        exclude module: 'junit'
        exclude group: 'org.apache.httpcomponents'
    }
    testImplementation('com.datastax.cassandra:cassandra-driver-core') {
        exclude(group: 'com.codahale.metrics', module: 'metrics-core')
    }
}

task memorySensitiveTest(type: Test) {
    include '**/CassandraKeyValueServiceSweepTaskRunnerIntegrationTest.class'
}

test {
    exclude '**/CassandraKeyValueServiceSweepTaskRunnerIntegrationTest.class'
}

task testSubset1(type: Test) {
    include '**/CassandraKeyValueServiceTableCreationIntegrationTest.class'
    include '**/CassandraKeyValueServiceTableManipulationIntegrationTest.class'
    include '**/TicketsEncodingCassandraKeyValueServiceTransactionIntegrationTest.class'
    include '**/DirectEncodingCassandraKeyValueServiceTransactionIntegrationTest.class'
    include '**/TwoStageEncodingCassandraKeyValueServiceTransactionIntegrationTest.class'
    include '**/CassandraKvsAsyncFallbackMechanismsTests.class'
    include '**/AsyncCassandraKvsSerializableTransactionTest.class'
    include '**/SyncCassandraKvsSerializableTransactionTest.class'
}

task testSubset2(type: Test) {
    include '**/*Test.class'
    include '**/*Tests.class'
    exclude '**/CassandraKeyValueServiceTableCreationIntegrationTest.class'
    exclude '**/CassandraKeyValueServiceTableManipulationIntegrationTest.class'
    exclude '**/TicketsEncodingCassandraKeyValueServiceTransactionIntegrationTest.class'
    exclude '**/DirectEncodingCassandraKeyValueServiceTransactionIntegrationTest.class'
    exclude '**/TwoStageEncodingCassandraKeyValueServiceTransactionIntegrationTest.class'
    exclude '**/CassandraKvsAsyncFallbackMechanismsTests.class'
    exclude '**/AsyncCassandraKvsSerializableTransactionTest.class'
    exclude '**/SyncCassandraKvsSerializableTransactionTest.class'
}

tasks.withType(Test) {
    useJUnitPlatform()
    testLogging {
        // set options for log level LIFECYCLE
        events "passed", "skipped", "failed"
    }
}
