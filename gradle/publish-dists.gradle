apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.artifactory'
apply plugin: 'com.jfrog.bintray'

// If you modify bintray or artifactory publishing you also need to modify publish-jars.gradle

publishing {
    publications {
        dists(MavenPublication) {
            artifact distTar
            pom.withXml {
                def scm = asNode().appendNode('scm')
                scm.appendNode('url', 'https://github.com/palantir/atlasdb')
                def licenses = asNode().appendNode('licenses')
                def license = licenses.appendNode('license')
                license.appendNode('name', 'BSD-3')
                license.appendNode('url', 'http://opensource.org/licenses/BSD-3-Clause')
            }
        }
    }
}

// Bintray publish
bintray {
    user = System.getenv('BINTRAY_USERNAME')
    key = System.getenv('BINTRAY_PASSWORD')
    publish = true
    pkg {
        userOrg = 'palantir'
        repo = 'releases'
        name = 'atlasdb'
        licenses = ['BSD-3-Clause']
        publications = ['dists']
    }
}

bintrayUpload.onlyIf {
    System.getenv('BINTRAY_USERNAME') && System.getenv('BINTRAY_PASSWORD') && project.version ==~ releaseVersionRegex
}

bintrayUpload.dependsOn 'generatePomFileForDistsPublication', 'distTar', 'build'

// Artifactory publish
artifactory {
  publish {
    contextUrl = System.env.ARTIFACTORY_URL
    repository {
      repoKey = System.env.ARTIFACTORY_DIST_REPO
      username = System.env.ARTIFACTORY_USERNAME
      password = System.env.ARTIFACTORY_PASSWORD
      maven = true
    }
    defaults {
      publications ('dists')
      properties = ['git': project.version.toString()]
    }
  }
}

artifactoryPublish.onlyIf {
    System.getenv('ARTIFACTORY_USERNAME') && System.getenv('ARTIFACTORY_PASSWORD') && System.getenv('ARTIFACTORY_DIST_REPO') && System.getenv('ARTIFACTORY_URL') && !(project.version ==~ releaseVersionRegex)
}

artifactoryPublish.dependsOn 'generatePomFileForDistsPublication', 'distTar', 'build'

ext {
    releaseVersionRegex = /\d+\.\d+\.\d+(-alpha|-beta|-rc)?(\d+)?/
}

tasks.getByName('distTar').doLast {
    println "Distribution tarball is ready at $outputs.files.singleFile"
}
