apply from: "../gradle/publish-jars.gradle"
apply plugin: 'org.inferred.processors'
apply plugin: 'com.github.johnrengelman.shadow'

apply from: "../gradle/shared.gradle"

configurations {
  explicitShadow
  shadow.extendsFrom(explicitShadow)
  compile.extendsFrom(explicitShadow)
}

dependencies {
  compile group: 'com.palantir.safe-logging', name: 'safe-logging'

  explicitShadow (group: 'de.jflex', name: 'jflex', version: '1.6.0') {
    exclude(group: 'org.apache.ant', module: 'ant')
  }
  explicitShadow group: 'com.github.rholder', name: 'snowball-stemmer', version: '1.3.0.581.1'
  explicitShadow group: 'com.carrotsearch', name: 'hppc', version: '0.5.4'

  explicitShadow project(":atlasdb-client")
  explicitShadow project(":atlasdb-processors")
  explicitShadow project(":atlasdb-api")
  explicitShadow project(":commons-api")
  explicitShadow project(':timestamp-impl')

  explicitShadow ('com.palantir.cassandra:cassandra-thrift:' + libVersions.palantir_cassandra_thrift) {
    exclude(group: 'de.jflex', module: 'jflex')
    exclude(group: 'org.apache.ant', module: 'ant')
    exclude(group: 'com.github.rholder', module: 'snowball-stemmer')
    exclude(group: 'com.carrotsearch', module: 'hppc')
  }

  explicitShadow ('com.datastax.cassandra:cassandra-driver-core:' + libVersions.cassandra_driver_core) {
    exclude(group: 'com.codahale.metrics', module: 'metrics-core')
  }
  explicitShadow group: 'com.google.guava', name: 'guava'

  explicitShadow 'org.apache.commons:commons-pool2:2.4.2'

  explicitShadow group: 'com.palantir.conjure.java.api', name: 'ssl-config'
  explicitShadow group: 'com.palantir.conjure.java.runtime', name: 'keystores'
  explicitShadow group: 'com.palantir.tracing', name: 'tracing'

  // does shadowing statically analysed annotations really buy us anything?
  explicitShadow group: 'com.google.code.findbugs', name: 'findbugs-annotations'
  explicitShadow group: 'com.google.code.findbugs', name: 'jsr305'

  explicitShadow group: 'org.jboss.marshalling', name: 'jboss-marshalling', version: '1.4.11.Final'

  testCompile project(path: ":atlasdb-client", configuration: "testArtifacts")
  testCompile project(":atlasdb-config")
  testCompile group: 'org.mockito', name: 'mockito-core'
  testCompile group: 'org.assertj', name: 'assertj-core'
  testCompile group: 'org.hamcrest', name: 'hamcrest-library'
  testCompile group: 'org.awaitility', name: 'awaitility'
  testCompile group: 'uk.org.lidalia', name: 'slf4j-test', version: '1.1.0'
  testCompile group: "org.jmock", name: "jmock", version: libVersions.jmock

  processor group: 'org.immutables', name: 'value'
  processor 'com.google.auto.service:auto-service:1.0-rc2'
  processor project(":atlasdb-processors")

  explicitShadow 'com.palantir.patches.sourceforge:trove3:' + libVersions.trove
}

shadowJar {
  mergeServiceFiles()
  classifier ''

  relocate('jflex', atlasdb_shaded + 'jflex')
  relocate('org.apache.tools.ant', atlasdb_shaded + 'ant')
  relocate('org.tarturus.snowball', atlasdb_shaded + 'snowball')
  relocate('com.carrotsearch.hppc',  atlasdb_shaded + 'hppc')

  dependencies {
      include(dependency { false })
  }
}

jar.dependsOn shadowJar
jar.onlyIf { false }

apply plugin: 'com.palantir.sls-recommended-dependencies'

recommendedProductDependencies {
    productDependency {
        productGroup = 'com.palantir.rescue'
        productName = 'rescue'
        minimumVersion = '4.4.0'
        maximumVersion = '4.x.x'
    }

    productDependency {
        productGroup = 'com.palantir.cassandra'
        productName = 'sls-cassandra'
        minimumVersion = '3.31.0'
        maximumVersion = '4.x.x'
    }
}
