apply plugin: 'org.inferred.processors'

apply from: "../gradle/shared.gradle"

dependencies {
  compile project(":atlasdb-client")
  compile project(":atlasdb-api")
  compile project(":commons-api")
  compile project(':timestamp-impl')

  compile('org.apache.cassandra:cassandra-all:' + libVersions.cassandra) {
    exclude(group: 'com.google.guava', module: 'guava')
    exclude(module: 'junit')
  }
  compile('com.datastax.cassandra:cassandra-driver-core:' + libVersions.cassandra_driver_core) {
    exclude group: 'com.google.guava', module: 'guava'
  }
  compile 'com.google.guava:guava:' + libVersions.guava
  compile 'junit:junit:' + libVersions.junit

  compile 'org.apache.commons:commons-pool2:2.4.2'

  compile ('com.palantir.remoting:ssl-config:' + libVersions.http_remoting) {
    exclude group: 'com.fasterxml.jackson.core', module: 'jackson-databind'
  }

  compile group: 'com.google.code.findbugs', name: 'annotations', version: libVersions.findbugsAnnotations

  testCompile 'org.mockito:mockito-core:' + libVersions.mockito

  processor 'org.immutables:value:' + libVersions.immutables
  processor 'com.google.auto.service:auto-service:1.0-rc2'
}

configurations.matching({ it.name in ['compile', 'runtime'] }).all {
    resolutionStrategy {
        force 'ch.qos.logback:logback-classic:1.1.3'
        force 'com.fasterxml.jackson.core:jackson-databind:' + libVersions.jackson
        force 'com.fasterxml.jackson.core:jackson-core:' + libVersions.jackson
        force 'com.fasterxml.jackson.datatype:jackson-datatype-guava:' + libVersions.jackson
        force 'com.google.code.findbugs:jsr305:' + libVersions.jsr305
        force 'com.googlecode.json-simple:json-simple:1.1.1'
        force 'joda-time:joda-time:' + libVersions.joda_time
        force 'org.apache.thrift:libthrift:' + libVersions.libthrift
        force 'org.slf4j:slf4j-api:1.7.6'
        force 'org.xerial.snappy:snappy-java:' + libVersions.snappy
        force 'org.yaml:snakeyaml:1.12'
        force 'javax.validation:validation-api:1.1.0.Final'
        force 'commons-codec:commons-codec:' + libVersions.commons_codec
    }
}
