apply plugin: 'com.palantir.java-distribution'
apply plugin: 'org.inferred.processors'
apply plugin: 'org.unbroken-dome.test-sets'

apply from: "../gradle/publish-dists.gradle"
apply from: "../gradle/shared.gradle"

testSets {
    integTest
}

jacocoTestReport {
    executionData test, integTest
}

check.dependsOn integTest

dependencies {
    compile project(":timestamp-impl")
    compile project(":lock-impl")
    compile project(":leader-election-impl")
    compile project(":atlasdb-config")

    compile group: 'com.github.rholder', name: 'guava-retrying'
    compile group: 'com.palantir.remoting1', name: 'jersey-servers'
    compile group: 'com.palantir.remoting1', name: 'ssl-config'
    compile group: 'com.palantir.remoting1', name: 'tracing'
    compile group: 'io.atomix', name: 'atomix'
    compile group: 'io.atomix.catalyst', name: 'catalyst-netty'
    compile group: 'io.dropwizard', name: 'dropwizard-core', version: libVersions.timelock_dropwizard
    compile group: 'io.dropwizard', name: 'dropwizard-http2', version: libVersions.timelock_dropwizard
    compile group: 'io.dropwizard', name: 'dropwizard-request-logging', version: libVersions.timelock_dropwizard
    compile group: 'io.dropwizard.modules', name: 'dropwizard-java8'
    compile group: 'org.eclipse.jetty', name: 'jetty-alpn-server'
    compile group: 'org.eclipse.jetty.http2', name: 'http2-common'

    runtime group: 'org.mortbay.jetty.alpn', name: 'jetty-alpn-agent'

    processor group: 'org.immutables', name: 'value'

    testCompile project(":atlasdb-config")
    testCompile project(path: ":leader-election-impl", configuration: "testArtifacts")

    testCompile group: 'org.assertj', name: 'assertj-core'
    testCompile group: 'org.mockito', name: 'mockito-core'
    testCompile project(":atlasdb-tests-shared")

    integTestCompile group: 'io.dropwizard', name: 'dropwizard-testing', version: libVersions.timelock_dropwizard
}

distribution {
    serviceName "timelock-server"
    mainClass 'com.palantir.atlasdb.timelock.TimeLockServerLauncher'
    args 'server', 'var/conf/timelock.yml'
    defaultJvmOpts "-javaagent:service/javaAgents/jetty-alpn-agent.jar"
}

tasks.withType(JavaForkOptions) {
    dependsOn 'copyJavaAgents'
    jvmArgs "-javaagent:${projectDir}/service/javaAgents/jetty-alpn-agent.jar"
}

task copyJavaAgents(type: Copy) {
    outputs.upToDateWhen { false }
    from(configurations.runtime) {
        include '*jetty-alpn-agent*'
    }
    into "${projectDir}/service/javaAgents"
    rename { String fileName ->
        fileName.replaceFirst("-[0-9]+\\.[0-9]+\\.[0-9]+.*\\.jar", ".jar")
    }
}

configurations {
    javaAgent
}
